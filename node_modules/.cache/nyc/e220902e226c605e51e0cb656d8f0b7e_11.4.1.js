var cov_1tn3yn4ack=function(){var path='/home/bwilbur/projects/mercury/modules/api/models/api-service.js',hash='c70dfbdf317b1c193a46dd4541d597ecc72beb7a',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/api/models/api-service.js',statementMap:{'0':{start:{line:1,column:16},end:{line:1,column:34}},'1':{start:{line:2,column:20},end:{line:2,column:43}},'2':{start:{line:3,column:15},end:{line:3,column:59}},'3':{start:{line:13,column:2},end:{line:15,column:4}},'4':{start:{line:16,column:2},end:{line:16,column:33}},'5':{start:{line:17,column:2},end:{line:17,column:35}},'6':{start:{line:18,column:2},end:{line:18,column:31}},'7':{start:{line:29,column:2},end:{line:29,column:20}},'8':{start:{line:30,column:2},end:{line:30,column:29}},'9':{start:{line:32,column:18},end:{line:32,column:61}},'10':{start:{line:33,column:16},end:{line:33,column:60}},'11':{start:{line:34,column:14},end:{line:34,column:35}},'12':{start:{line:35,column:18},end:{line:35,column:51}},'13':{start:{line:37,column:16},end:{line:48,column:4}},'14':{start:{line:38,column:3},end:{line:47,column:6}},'15':{start:{line:39,column:4},end:{line:43,column:5}},'16':{start:{line:41,column:5},end:{line:41,column:19}},'17':{start:{line:42,column:5},end:{line:42,column:12}},'18':{start:{line:45,column:25},end:{line:45,column:41}},'19':{start:{line:46,column:4},end:{line:46,column:26}},'20':{start:{line:49,column:2},end:{line:49,column:17}},'21':{start:{line:53,column:0},end:{line:53,column:28}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:11,column:1},end:{line:11,column:2}},loc:{start:{line:12,column:1},end:{line:19,column:2}},line:12},'1':{name:'(anonymous_1)',decl:{start:{line:27,column:1},end:{line:27,column:2}},loc:{start:{line:28,column:1},end:{line:50,column:2}},line:28},'2':{name:'(anonymous_2)',decl:{start:{line:37,column:28},end:{line:37,column:29}},loc:{start:{line:37,column:53},end:{line:48,column:3}},line:37},'3':{name:'(anonymous_3)',decl:{start:{line:38,column:20},end:{line:38,column:21}},loc:{start:{line:38,column:51},end:{line:47,column:4}},line:38}},branchMap:{'0':{loc:{start:{line:29,column:9},end:{line:29,column:19}},type:'binary-expr',locations:[{start:{line:29,column:9},end:{line:29,column:13}},{start:{line:29,column:17},end:{line:29,column:19}}],line:29},'1':{loc:{start:{line:39,column:4},end:{line:43,column:5}},type:'if',locations:[{start:{line:39,column:4},end:{line:43,column:5}},{start:{line:39,column:4},end:{line:43,column:5}}],line:39}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0},f:{'0':0,'1':0,'2':0,'3':0},b:{'0':[0,0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const request=(cov_1tn3yn4ack.s[0]++,require('request'));const queryString=(cov_1tn3yn4ack.s[1]++,require('query-string'));const config=(cov_1tn3yn4ack.s[2]++,require('./../../../config/config').instance);/**
 * Abstracts API access into its own layer.
 * Use for all API calls
 */class ApiService{constructor(){cov_1tn3yn4ack.f[0]++;cov_1tn3yn4ack.s[3]++;this.headers={'Content-Type':'application/json'};cov_1tn3yn4ack.s[4]++;this.apiPort=config.api.port;cov_1tn3yn4ack.s[5]++;this.apiToken=config.api.token;cov_1tn3yn4ack.s[6]++;this.apiUrl=config.api.url;}/**
	 * Issues a GET request to the API and returns a promise that forwards the response
	 * @param string endpoint - The endpoint to access, e.g. "/building/all"
	 * @param any args - A set of key value pairs to encode in the URL string. Token is automatically included
	 * @return Promise
	 */apiGet(endpoint,args){cov_1tn3yn4ack.f[1]++;cov_1tn3yn4ack.s[7]++;args=(cov_1tn3yn4ack.b[0][0]++,args)||(cov_1tn3yn4ack.b[0][1]++,{});cov_1tn3yn4ack.s[8]++;args.token=this.apiToken;const baseUrl=(cov_1tn3yn4ack.s[9]++,this.apiUrl+':'+this.apiPort+endpoint);const query=(cov_1tn3yn4ack.s[10]++,queryString.stringify(args,{encode:false}));const url=(cov_1tn3yn4ack.s[11]++,baseUrl+'?'+query);const options=(cov_1tn3yn4ack.s[12]++,{headers:this.headers,url:url});var promise=(cov_1tn3yn4ack.s[13]++,new Promise(function(resolve,reject){cov_1tn3yn4ack.f[2]++;cov_1tn3yn4ack.s[14]++;request(options,function(error,response,body){cov_1tn3yn4ack.f[3]++;cov_1tn3yn4ack.s[15]++;if(error){cov_1tn3yn4ack.b[1][0]++;cov_1tn3yn4ack.s[16]++;reject(error);cov_1tn3yn4ack.s[17]++;return;}else{cov_1tn3yn4ack.b[1][1]++;}const responseJson=(cov_1tn3yn4ack.s[18]++,JSON.parse(body));cov_1tn3yn4ack.s[19]++;resolve(responseJson);});}));cov_1tn3yn4ack.s[20]++;return promise;}}cov_1tn3yn4ack.s[21]++;module.exports=ApiService;