var cov_2dx0qokisf=function(){var path='/home/bwilbur/projects/mercury/modules/auth/models/permission-dao.js',hash='0338aced1f56c2d8393c13896dca5b82cac337a7',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/auth/models/permission-dao.js',statementMap:{'0':{start:{line:1,column:19},end:{line:1,column:42}},'1':{start:{line:2,column:13},end:{line:2,column:48}},'2':{start:{line:13,column:2},end:{line:13,column:59}},'3':{start:{line:22,column:2},end:{line:22,column:49}},'4':{start:{line:33,column:18},end:{line:78,column:4}},'5':{start:{line:34,column:3},end:{line:37,column:4}},'6':{start:{line:36,column:4},end:{line:36,column:17}},'7':{start:{line:39,column:20},end:{line:46,column:4}},'8':{start:{line:48,column:3},end:{line:77,column:6}},'9':{start:{line:49,column:16},end:{line:49,column:21}},'10':{start:{line:51,column:4},end:{line:74,column:5}},'11':{start:{line:53,column:5},end:{line:73,column:6}},'12':{start:{line:55,column:19},end:{line:55,column:32}},'13':{start:{line:56,column:6},end:{line:67,column:7}},'14':{start:{line:58,column:7},end:{line:66,column:8}},'15':{start:{line:60,column:34},end:{line:60,column:53}},'16':{start:{line:61,column:8},end:{line:65,column:9}},'17':{start:{line:63,column:9},end:{line:63,column:22}},'18':{start:{line:64,column:9},end:{line:64,column:15}},'19':{start:{line:69,column:6},end:{line:72,column:7}},'20':{start:{line:71,column:7},end:{line:71,column:13}},'21':{start:{line:76,column:4},end:{line:76,column:17}},'22':{start:{line:80,column:2},end:{line:80,column:17}},'23':{start:{line:84,column:0},end:{line:84,column:31}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:11,column:1},end:{line:11,column:2}},loc:{start:{line:12,column:1},end:{line:14,column:2}},line:12},'1':{name:'(anonymous_1)',decl:{start:{line:20,column:1},end:{line:20,column:2}},loc:{start:{line:21,column:1},end:{line:23,column:2}},line:21},'2':{name:'(anonymous_2)',decl:{start:{line:31,column:1},end:{line:31,column:2}},loc:{start:{line:32,column:1},end:{line:81,column:2}},line:32},'3':{name:'(anonymous_3)',decl:{start:{line:33,column:55},end:{line:33,column:56}},loc:{start:{line:33,column:69},end:{line:78,column:3}},line:33},'4':{name:'(anonymous_4)',decl:{start:{line:48,column:69},end:{line:48,column:70}},loc:{start:{line:48,column:77},end:{line:77,column:4}},line:48}},branchMap:{'0':{loc:{start:{line:34,column:3},end:{line:37,column:4}},type:'if',locations:[{start:{line:34,column:3},end:{line:37,column:4}},{start:{line:34,column:3},end:{line:37,column:4}}],line:34},'1':{loc:{start:{line:51,column:4},end:{line:74,column:5}},type:'if',locations:[{start:{line:51,column:4},end:{line:74,column:5}},{start:{line:51,column:4},end:{line:74,column:5}}],line:51},'2':{loc:{start:{line:56,column:6},end:{line:67,column:7}},type:'if',locations:[{start:{line:56,column:6},end:{line:67,column:7}},{start:{line:56,column:6},end:{line:67,column:7}}],line:56},'3':{loc:{start:{line:61,column:8},end:{line:65,column:9}},type:'if',locations:[{start:{line:61,column:8},end:{line:65,column:9}},{start:{line:61,column:8},end:{line:65,column:9}}],line:61},'4':{loc:{start:{line:69,column:6},end:{line:72,column:7}},type:'if',locations:[{start:{line:69,column:6},end:{line:72,column:7}},{start:{line:69,column:6},end:{line:72,column:7}}],line:69}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Permission=(cov_2dx0qokisf.s[0]++,require('./permission'));const User=(cov_2dx0qokisf.s[1]++,require('./../../user/models/user'));class PermissionDao{/**
	 * Returns the permission with the given name, if one exists
	 * @param string permissionName
	 * @return Promise
	 */loadByName(permissionName){cov_2dx0qokisf.f[0]++;cov_2dx0qokisf.s[2]++;return Permission.findOne({name:permissionName}).exec();}/**
	 * Returns a list of all permissions
	 * @return Promise
	 */loadAll(){cov_2dx0qokisf.f[1]++;cov_2dx0qokisf.s[3]++;return Permission.find({}).sort('name').exec();}/**
	 * Determines whether or not the User with the given ID has the given permission
	 * @param string userId
	 * @param string permissionName
	 * @return Promise
	 */hasPermission(userId,permissionName){cov_2dx0qokisf.f[2]++;const promise=(cov_2dx0qokisf.s[4]++,this.loadByName(permissionName).then(permission=>{cov_2dx0qokisf.f[3]++;cov_2dx0qokisf.s[5]++;if(!permission){cov_2dx0qokisf.b[0][0]++;cov_2dx0qokisf.s[6]++;return false;}else{cov_2dx0qokisf.b[0][1]++;}const populate=(cov_2dx0qokisf.s[7]++,{path:'roles',model:'Role',populate:{path:'permissions',model:'Permission'}});cov_2dx0qokisf.s[8]++;return User.findOne({_id:userId}).populate(populate).exec().then(user=>{cov_2dx0qokisf.f[4]++;var found=(cov_2dx0qokisf.s[9]++,false);cov_2dx0qokisf.s[10]++;if(user.roles){cov_2dx0qokisf.b[1][0]++;cov_2dx0qokisf.s[11]++;for(let i=0;i<user.roles.length;i++){const role=(cov_2dx0qokisf.s[12]++,user.roles[i]);cov_2dx0qokisf.s[13]++;if(role.permissions){cov_2dx0qokisf.b[2][0]++;cov_2dx0qokisf.s[14]++;for(let j=0;j<role.permissions.length;j++){const currentPermission=(cov_2dx0qokisf.s[15]++,role.permissions[j]);cov_2dx0qokisf.s[16]++;if(currentPermission.name==permissionName){cov_2dx0qokisf.b[3][0]++;cov_2dx0qokisf.s[17]++;found=true;cov_2dx0qokisf.s[18]++;break;}else{cov_2dx0qokisf.b[3][1]++;}}}else{cov_2dx0qokisf.b[2][1]++;}cov_2dx0qokisf.s[19]++;if(found){cov_2dx0qokisf.b[4][0]++;cov_2dx0qokisf.s[20]++;break;}else{cov_2dx0qokisf.b[4][1]++;}}}else{cov_2dx0qokisf.b[1][1]++;}cov_2dx0qokisf.s[21]++;return found;});}));cov_2dx0qokisf.s[22]++;return promise;}}cov_2dx0qokisf.s[23]++;module.exports=PermissionDao;