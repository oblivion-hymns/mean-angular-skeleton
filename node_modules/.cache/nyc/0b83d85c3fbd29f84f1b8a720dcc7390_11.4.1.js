var cov_2akcptdj3o=function(){var path='/home/bwilbur/projects/mercury/modules/incident/models/incident-dao.js',hash='c7df630b18586fcf2256b987909de1fe71a76e2b',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/incident/models/incident-dao.js',statementMap:{'0':{start:{line:1,column:17},end:{line:1,column:36}},'1':{start:{line:2,column:17},end:{line:2,column:38}},'2':{start:{line:3,column:23},end:{line:3,column:83}},'3':{start:{line:4,column:16},end:{line:4,column:55}},'4':{start:{line:10,column:19},end:{line:17,column:4}},'5':{start:{line:18,column:2},end:{line:18,column:18}},'6':{start:{line:28,column:19},end:{line:28,column:44}},'7':{start:{line:29,column:2},end:{line:29,column:63}},'8':{start:{line:38,column:19},end:{line:38,column:44}},'9':{start:{line:39,column:2},end:{line:39,column:81}},'10':{start:{line:48,column:19},end:{line:48,column:44}},'11':{start:{line:49,column:2},end:{line:49,column:78}},'12':{start:{line:60,column:2},end:{line:63,column:3}},'13':{start:{line:62,column:3},end:{line:62,column:10}},'14':{start:{line:65,column:2},end:{line:65,column:25}},'15':{start:{line:68,column:2},end:{line:72,column:3}},'16':{start:{line:71,column:3},end:{line:71,column:48}},'17':{start:{line:75,column:2},end:{line:75,column:39}},'18':{start:{line:76,column:2},end:{line:79,column:3}},'19':{start:{line:78,column:3},end:{line:78,column:54}},'20':{start:{line:81,column:2},end:{line:84,column:3}},'21':{start:{line:83,column:3},end:{line:83,column:30}},'22':{start:{line:86,column:2},end:{line:96,column:3}},'23':{start:{line:88,column:3},end:{line:88,column:24}},'24':{start:{line:92,column:3},end:{line:95,column:4}},'25':{start:{line:94,column:4},end:{line:94,column:73}},'26':{start:{line:98,column:2},end:{line:98,column:89}},'27':{start:{line:109,column:2},end:{line:121,column:5}},'28':{start:{line:110,column:3},end:{line:110,column:29}},'29':{start:{line:111,column:3},end:{line:120,column:6}},'30':{start:{line:112,column:27},end:{line:112,column:47}},'31':{start:{line:113,column:20},end:{line:113,column:33}},'32':{start:{line:114,column:4},end:{line:117,column:7}},'33':{start:{line:115,column:18},end:{line:115,column:47}},'34':{start:{line:116,column:5},end:{line:116,column:95}},'35':{start:{line:119,column:4},end:{line:119,column:38}},'36':{start:{line:131,column:16},end:{line:131,column:35}},'37':{start:{line:132,column:18},end:{line:144,column:4}},'38':{start:{line:133,column:21},end:{line:133,column:33}},'39':{start:{line:134,column:17},end:{line:134,column:67}},'40':{start:{line:135,column:18},end:{line:140,column:4}},'41':{start:{line:141,column:3},end:{line:143,column:6}},'42':{start:{line:142,column:4},end:{line:142,column:38}},'43':{start:{line:146,column:2},end:{line:146,column:17}},'44':{start:{line:154,column:36},end:{line:154,column:106}},'45':{start:{line:155,column:36},end:{line:155,column:67}},'46':{start:{line:156,column:2},end:{line:156,column:40}},'47':{start:{line:160,column:0},end:{line:160,column:29}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:8,column:1},end:{line:8,column:2}},loc:{start:{line:9,column:1},end:{line:19,column:2}},line:9},'1':{name:'(anonymous_1)',decl:{start:{line:26,column:1},end:{line:26,column:2}},loc:{start:{line:27,column:1},end:{line:30,column:2}},line:27},'2':{name:'(anonymous_2)',decl:{start:{line:36,column:1},end:{line:36,column:2}},loc:{start:{line:37,column:1},end:{line:40,column:2}},line:37},'3':{name:'(anonymous_3)',decl:{start:{line:46,column:1},end:{line:46,column:2}},loc:{start:{line:47,column:1},end:{line:50,column:2}},line:47},'4':{name:'(anonymous_4)',decl:{start:{line:57,column:1},end:{line:57,column:2}},loc:{start:{line:58,column:1},end:{line:99,column:2}},line:58},'5':{name:'(anonymous_5)',decl:{start:{line:107,column:1},end:{line:107,column:2}},loc:{start:{line:108,column:1},end:{line:122,column:2}},line:108},'6':{name:'(anonymous_6)',decl:{start:{line:109,column:39},end:{line:109,column:40}},loc:{start:{line:109,column:51},end:{line:121,column:3}},line:109},'7':{name:'(anonymous_7)',decl:{start:{line:111,column:31},end:{line:111,column:32}},loc:{start:{line:111,column:37},end:{line:120,column:4}},line:111},'8':{name:'(anonymous_8)',decl:{start:{line:114,column:44},end:{line:114,column:45}},loc:{start:{line:114,column:52},end:{line:117,column:5}},line:114},'9':{name:'(anonymous_9)',decl:{start:{line:129,column:1},end:{line:129,column:2}},loc:{start:{line:130,column:1},end:{line:147,column:2}},line:130},'10':{name:'(anonymous_10)',decl:{start:{line:132,column:54},end:{line:132,column:55}},loc:{start:{line:132,column:66},end:{line:144,column:3}},line:132},'11':{name:'(anonymous_11)',decl:{start:{line:141,column:63},end:{line:141,column:64}},loc:{start:{line:141,column:69},end:{line:143,column:4}},line:141},'12':{name:'(anonymous_12)',decl:{start:{line:152,column:1},end:{line:152,column:2}},loc:{start:{line:153,column:1},end:{line:157,column:2}},line:153}},branchMap:{'0':{loc:{start:{line:60,column:2},end:{line:63,column:3}},type:'if',locations:[{start:{line:60,column:2},end:{line:63,column:3}},{start:{line:60,column:2},end:{line:63,column:3}}],line:60},'1':{loc:{start:{line:68,column:2},end:{line:72,column:3}},type:'if',locations:[{start:{line:68,column:2},end:{line:72,column:3}},{start:{line:68,column:2},end:{line:72,column:3}}],line:68},'2':{loc:{start:{line:76,column:2},end:{line:79,column:3}},type:'if',locations:[{start:{line:76,column:2},end:{line:79,column:3}},{start:{line:76,column:2},end:{line:79,column:3}}],line:76},'3':{loc:{start:{line:81,column:2},end:{line:84,column:3}},type:'if',locations:[{start:{line:81,column:2},end:{line:84,column:3}},{start:{line:81,column:2},end:{line:84,column:3}}],line:81},'4':{loc:{start:{line:86,column:2},end:{line:96,column:3}},type:'if',locations:[{start:{line:86,column:2},end:{line:96,column:3}},{start:{line:86,column:2},end:{line:96,column:3}}],line:86},'5':{loc:{start:{line:86,column:6},end:{line:86,column:49}},type:'binary-expr',locations:[{start:{line:86,column:6},end:{line:86,column:22}},{start:{line:86,column:26},end:{line:86,column:49}}],line:86},'6':{loc:{start:{line:94,column:25},end:{line:94,column:72}},type:'binary-expr',locations:[{start:{line:94,column:25},end:{line:94,column:47}},{start:{line:94,column:51},end:{line:94,column:72}}],line:94}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const mongoose=(cov_2akcptdj3o.s[0]++,require('mongoose'));const Incident=(cov_2akcptdj3o.s[1]++,require('./incident'));const MailDispatcher=(cov_2akcptdj3o.s[2]++,require('./../../communication/models/mail/mail-dispatcher'));const RoleDao=(cov_2akcptdj3o.s[3]++,require('./../../auth/models/role-dao'));class IncidentDao{getPopulateOptions(){cov_2akcptdj3o.f[0]++;const populate=(cov_2akcptdj3o.s[4]++,[{path:'fields',model:'IncidentField',populate:{path:'type',model:'IncidentFieldType'}}]);cov_2akcptdj3o.s[5]++;return populate;}/**
	 * Returns a single incident, or false if it doesn't exist
	 * @param string id
	 * @return Promise
	 */loadOne(id){cov_2akcptdj3o.f[1]++;const populate=(cov_2akcptdj3o.s[6]++,this.getPopulateOptions());cov_2akcptdj3o.s[7]++;return Incident.findOne({_id:id}).populate(populate).exec();}/**
	 * Loads all incidents that have been published
	 * @return Promise
	 */loadPublished(){cov_2akcptdj3o.f[2]++;const populate=(cov_2akcptdj3o.s[8]++,this.getPopulateOptions());cov_2akcptdj3o.s[9]++;return Incident.find({published:true}).sort('name').populate(populate).exec();}/**
	 * Returns a list of all incidents
	 * @return Promise
	 */loadAll(){cov_2akcptdj3o.f[3]++;const populate=(cov_2akcptdj3o.s[10]++,this.getPopulateOptions());cov_2akcptdj3o.s[11]++;return Incident.find({active:true}).sort('name').populate(populate).exec();}/**
	 * Saves the given incident
	 * @param Incident incident
	 * @return Promise
	 */save(incident){cov_2akcptdj3o.f[4]++;cov_2akcptdj3o.s[12]++;//Can't save an inactive incident
if(incident.active===false){cov_2akcptdj3o.b[0][0]++;cov_2akcptdj3o.s[13]++;return;}else{cov_2akcptdj3o.b[0][1]++;}cov_2akcptdj3o.s[14]++;incident.active=true;//If incident is new, assign an ID
cov_2akcptdj3o.s[15]++;if(!incident._id){cov_2akcptdj3o.b[1][0]++;cov_2akcptdj3o.s[16]++;//Incident is new
incident._id=new mongoose.mongo.ObjectID();}else{cov_2akcptdj3o.b[1][1]++;}//Trim properties
cov_2akcptdj3o.s[17]++;incident.name=incident.name.trim();cov_2akcptdj3o.s[18]++;if(incident.description){cov_2akcptdj3o.b[2][0]++;cov_2akcptdj3o.s[19]++;incident.description=incident.description.trim();}else{cov_2akcptdj3o.b[2][1]++;}cov_2akcptdj3o.s[20]++;if(!incident.published){cov_2akcptdj3o.b[3][0]++;cov_2akcptdj3o.s[21]++;incident.published=false;}else{cov_2akcptdj3o.b[3][1]++;}cov_2akcptdj3o.s[22]++;if((cov_2akcptdj3o.b[5][0]++,!incident.fields)||(cov_2akcptdj3o.b[5][1]++,!incident.fields.length)){cov_2akcptdj3o.b[4][0]++;cov_2akcptdj3o.s[23]++;incident.fields=[];}else{cov_2akcptdj3o.b[4][1]++;cov_2akcptdj3o.s[24]++;for(let i=0;i<incident.fields.length;i++){cov_2akcptdj3o.s[25]++;incident.fields[i]=(cov_2akcptdj3o.b[6][0]++,incident.fields[i]._id)||(cov_2akcptdj3o.b[6][1]++,incident.fields[i].id);}}cov_2akcptdj3o.s[26]++;return Incident.findOneAndUpdate({_id:incident._id},incident,{upsert:true}).exec();}/**
	 * Publishes the incident. This means that Building Reps are now allowed to fill out
	 * this incident's form
	 * @param string incidentId
	 * @return Promise
	 */publish(incidentId){cov_2akcptdj3o.f[5]++;cov_2akcptdj3o.s[27]++;return this.loadOne(incidentId).then(incident=>{cov_2akcptdj3o.f[6]++;cov_2akcptdj3o.s[28]++;incident.published=true;cov_2akcptdj3o.s[29]++;return incident.save().then(()=>{cov_2akcptdj3o.f[7]++;const mailDispatcher=(cov_2akcptdj3o.s[30]++,new MailDispatcher());const roleDao=(cov_2akcptdj3o.s[31]++,new RoleDao());cov_2akcptdj3o.s[32]++;roleDao.loadByName('Building Rep').then(role=>{cov_2akcptdj3o.f[8]++;const args=(cov_2akcptdj3o.s[33]++,{incidentName:incident.name});cov_2akcptdj3o.s[34]++;mailDispatcher.sendEmailToRole(role,'Emergency Plan Required','incident/publish',args);});cov_2akcptdj3o.s[35]++;this.updateBuildingAgencyHealth();});});}/**
	 * Archives the given incident, rendering it un-viewable and un-usuable by all end-users
	 * @param string incidentId
	 * @return Promise
	 */archive(incidentId){cov_2akcptdj3o.f[9]++;const query=(cov_2akcptdj3o.s[36]++,{'_id':incidentId});const promise=(cov_2akcptdj3o.s[37]++,Incident.findOne(query).exec().then(incident=>{cov_2akcptdj3o.f[10]++;const timestamp=(cov_2akcptdj3o.s[38]++,+new Date());let newName=(cov_2akcptdj3o.s[39]++,incident.name+' (Archived on '+timestamp+')');const update=(cov_2akcptdj3o.s[40]++,{$set:{active:false,name:newName}});cov_2akcptdj3o.s[41]++;return Incident.findOneAndUpdate(query,update).exec().then(()=>{cov_2akcptdj3o.f[11]++;cov_2akcptdj3o.s[42]++;this.updateBuildingAgencyHealth();});}));cov_2akcptdj3o.s[43]++;return promise;}/**
	 * Updates the health of all building-agency units
	 */updateBuildingAgencyHealth(){cov_2akcptdj3o.f[12]++;const BuildingAgencyIncidentDao=(cov_2akcptdj3o.s[44]++,require('./../../building-agency/models/building-agency-incident-dao'));const buildingAgencyIncidentDao=(cov_2akcptdj3o.s[45]++,new BuildingAgencyIncidentDao());cov_2akcptdj3o.s[46]++;buildingAgencyIncidentDao.updateAll();}}cov_2akcptdj3o.s[47]++;module.exports=IncidentDao;