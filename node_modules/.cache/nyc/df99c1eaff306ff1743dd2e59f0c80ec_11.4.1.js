var cov_1gaatz3rcn=function(){var path='/home/bwilbur/projects/mercury/modules/contact/models/contact-dao.js',hash='0378e87d7592ebae83ce219766aef1ee6d145d58',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/contact/models/contact-dao.js',statementMap:{'0':{start:{line:1,column:17},end:{line:1,column:36}},'1':{start:{line:2,column:23},end:{line:2,column:80}},'2':{start:{line:3,column:26},end:{line:3,column:87}},'3':{start:{line:4,column:16},end:{line:4,column:36}},'4':{start:{line:15,column:2},end:{line:15,column:37}},'5':{start:{line:25,column:25},end:{line:25,column:58}},'6':{start:{line:26,column:2},end:{line:26,column:68}},'7':{start:{line:36,column:13},end:{line:36,column:31}},'8':{start:{line:37,column:2},end:{line:37,column:21}},'9':{start:{line:38,column:14},end:{line:38,column:33}},'10':{start:{line:39,column:2},end:{line:39,column:23}},'11':{start:{line:40,column:15},end:{line:40,column:35}},'12':{start:{line:41,column:2},end:{line:44,column:3}},'13':{start:{line:43,column:3},end:{line:43,column:36}},'14':{start:{line:46,column:23},end:{line:46,column:50}},'15':{start:{line:47,column:2},end:{line:50,column:3}},'16':{start:{line:49,column:3},end:{line:49,column:55}},'17':{start:{line:52,column:2},end:{line:59,column:3}},'18':{start:{line:54,column:24},end:{line:54,column:39}},'19':{start:{line:55,column:3},end:{line:58,column:4}},'20':{start:{line:57,column:4},end:{line:57,column:49}},'21':{start:{line:61,column:19},end:{line:61,column:53}},'22':{start:{line:62,column:2},end:{line:65,column:3}},'23':{start:{line:64,column:3},end:{line:64,column:49}},'24':{start:{line:67,column:11},end:{line:67,column:36}},'25':{start:{line:68,column:2},end:{line:91,column:3}},'26':{start:{line:71,column:27},end:{line:71,column:54}},'27':{start:{line:72,column:21},end:{line:72,column:43}},'28':{start:{line:73,column:23},end:{line:78,column:5}},'29':{start:{line:79,column:19},end:{line:79,column:33}},'30':{start:{line:80,column:3},end:{line:80,column:75}},'31':{start:{line:84,column:22},end:{line:89,column:5}},'32':{start:{line:90,column:3},end:{line:90,column:28}},'33':{start:{line:104,column:24},end:{line:104,column:56}},'34':{start:{line:105,column:26},end:{line:105,column:60}},'35':{start:{line:106,column:20},end:{line:106,column:64}},'36':{start:{line:107,column:22},end:{line:110,column:5}},'37':{start:{line:111,column:2},end:{line:111,column:72}},'38':{start:{line:124,column:24},end:{line:124,column:56}},'39':{start:{line:125,column:26},end:{line:125,column:60}},'40':{start:{line:126,column:20},end:{line:129,column:3}},'41':{start:{line:130,column:22},end:{line:135,column:4}},'42':{start:{line:136,column:2},end:{line:136,column:59}},'43':{start:{line:146,column:26},end:{line:146,column:60}},'44':{start:{line:147,column:2},end:{line:151,column:5}},'45':{start:{line:148,column:21},end:{line:148,column:58}},'46':{start:{line:149,column:23},end:{line:149,column:69}},'47':{start:{line:150,column:3},end:{line:150,column:60}},'48':{start:{line:161,column:21},end:{line:161,column:23}},'49':{start:{line:162,column:2},end:{line:180,column:3}},'50':{start:{line:164,column:24},end:{line:164,column:33}},'51':{start:{line:165,column:21},end:{line:165,column:51}},'52':{start:{line:166,column:3},end:{line:166,column:36}},'53':{start:{line:167,column:15},end:{line:167,column:39}},'54':{start:{line:168,column:3},end:{line:168,column:24}},'55':{start:{line:169,column:19},end:{line:169,column:47}},'56':{start:{line:170,column:3},end:{line:170,column:32}},'57':{start:{line:172,column:3},end:{line:179,column:4}},'58':{start:{line:174,column:4},end:{line:178,column:7}},'59':{start:{line:182,column:2},end:{line:182,column:22}},'60':{start:{line:186,column:0},end:{line:186,column:28}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:13,column:1},end:{line:13,column:2}},loc:{start:{line:14,column:1},end:{line:16,column:2}},line:14},'1':{name:'(anonymous_1)',decl:{start:{line:23,column:1},end:{line:23,column:2}},loc:{start:{line:24,column:1},end:{line:27,column:2}},line:24},'2':{name:'(anonymous_2)',decl:{start:{line:34,column:1},end:{line:34,column:2}},loc:{start:{line:35,column:1},end:{line:92,column:2}},line:35},'3':{name:'(anonymous_3)',decl:{start:{line:102,column:1},end:{line:102,column:2}},loc:{start:{line:103,column:1},end:{line:112,column:2}},line:103},'4':{name:'(anonymous_4)',decl:{start:{line:122,column:1},end:{line:122,column:2}},loc:{start:{line:123,column:1},end:{line:137,column:2}},line:123},'5':{name:'(anonymous_5)',decl:{start:{line:144,column:1},end:{line:144,column:2}},loc:{start:{line:145,column:1},end:{line:152,column:2}},line:145},'6':{name:'(anonymous_6)',decl:{start:{line:147,column:60},end:{line:147,column:61}},loc:{start:{line:147,column:66},end:{line:151,column:3}},line:147},'7':{name:'(anonymous_7)',decl:{start:{line:159,column:1},end:{line:159,column:2}},loc:{start:{line:160,column:1},end:{line:183,column:2}},line:160}},branchMap:{'0':{loc:{start:{line:36,column:13},end:{line:36,column:31}},type:'binary-expr',locations:[{start:{line:36,column:13},end:{line:36,column:25}},{start:{line:36,column:29},end:{line:36,column:31}}],line:36},'1':{loc:{start:{line:38,column:14},end:{line:38,column:33}},type:'binary-expr',locations:[{start:{line:38,column:14},end:{line:38,column:27}},{start:{line:38,column:31},end:{line:38,column:33}}],line:38},'2':{loc:{start:{line:40,column:15},end:{line:40,column:35}},type:'binary-expr',locations:[{start:{line:40,column:15},end:{line:40,column:29}},{start:{line:40,column:33},end:{line:40,column:35}}],line:40},'3':{loc:{start:{line:41,column:2},end:{line:44,column:3}},type:'if',locations:[{start:{line:41,column:2},end:{line:44,column:3}},{start:{line:41,column:2},end:{line:44,column:3}}],line:41},'4':{loc:{start:{line:47,column:2},end:{line:50,column:3}},type:'if',locations:[{start:{line:47,column:2},end:{line:50,column:3}},{start:{line:47,column:2},end:{line:50,column:3}}],line:47},'5':{loc:{start:{line:55,column:3},end:{line:58,column:4}},type:'if',locations:[{start:{line:55,column:3},end:{line:58,column:4}},{start:{line:55,column:3},end:{line:58,column:4}}],line:55},'6':{loc:{start:{line:61,column:19},end:{line:61,column:53}},type:'binary-expr',locations:[{start:{line:61,column:19},end:{line:61,column:35}},{start:{line:61,column:39},end:{line:61,column:53}}],line:61},'7':{loc:{start:{line:62,column:2},end:{line:65,column:3}},type:'if',locations:[{start:{line:62,column:2},end:{line:65,column:3}},{start:{line:62,column:2},end:{line:65,column:3}}],line:62},'8':{loc:{start:{line:67,column:11},end:{line:67,column:36}},type:'binary-expr',locations:[{start:{line:67,column:11},end:{line:67,column:22}},{start:{line:67,column:26},end:{line:67,column:36}}],line:67},'9':{loc:{start:{line:68,column:2},end:{line:91,column:3}},type:'if',locations:[{start:{line:68,column:2},end:{line:91,column:3}},{start:{line:68,column:2},end:{line:91,column:3}}],line:68},'10':{loc:{start:{line:165,column:21},end:{line:165,column:51}},type:'binary-expr',locations:[{start:{line:165,column:21},end:{line:165,column:45}},{start:{line:165,column:49},end:{line:165,column:51}}],line:165},'11':{loc:{start:{line:167,column:15},end:{line:167,column:39}},type:'binary-expr',locations:[{start:{line:167,column:15},end:{line:167,column:33}},{start:{line:167,column:37},end:{line:167,column:39}}],line:167},'12':{loc:{start:{line:169,column:19},end:{line:169,column:47}},type:'binary-expr',locations:[{start:{line:169,column:19},end:{line:169,column:41}},{start:{line:169,column:45},end:{line:169,column:47}}],line:169},'13':{loc:{start:{line:172,column:3},end:{line:179,column:4}},type:'if',locations:[{start:{line:172,column:3},end:{line:179,column:4}},{start:{line:172,column:3},end:{line:179,column:4}}],line:172},'14':{loc:{start:{line:172,column:7},end:{line:172,column:49}},type:'binary-expr',locations:[{start:{line:172,column:7},end:{line:172,column:29}},{start:{line:172,column:33},end:{line:172,column:49}}],line:172}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0],'11':[0,0],'12':[0,0],'13':[0,0],'14':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const mongoose=(cov_1gaatz3rcn.s[0]++,require('mongoose'));const BuildingAgency=(cov_1gaatz3rcn.s[1]++,require('./../../building-agency/models/building-agency'));const BuildingAgencyDao=(cov_1gaatz3rcn.s[2]++,require('./../../building-agency/models/building-agency-dao'));const Contact=(cov_1gaatz3rcn.s[3]++,require('./contact'));class ContactDao{/**
	 * Returns a single contact
	 * @param string id
	 * @return Promise
	 */loadOne(id){cov_1gaatz3rcn.f[0]++;cov_1gaatz3rcn.s[4]++;return Contact.findById(id).exec();}/**
	 * Returns a list of all contacts for a given agency
	 * @param string agencyId
	 * @return Promise
	 */loadForAgency(agencyId){cov_1gaatz3rcn.f[1]++;const agencyObjectId=(cov_1gaatz3rcn.s[5]++,mongoose.Types.ObjectId(agencyId));cov_1gaatz3rcn.s[6]++;return Contact.find({agency:agencyObjectId}).sort('name').exec();}/**
	 * Saves/updates the given Contact and all of its info
	 * @param Contact contact
	 * @return Promise
	 */save(contact){cov_1gaatz3rcn.f[2]++;let name=(cov_1gaatz3rcn.s[7]++,(cov_1gaatz3rcn.b[0][0]++,contact.name)||(cov_1gaatz3rcn.b[0][1]++,''));cov_1gaatz3rcn.s[8]++;name=name.trim();let email=(cov_1gaatz3rcn.s[9]++,(cov_1gaatz3rcn.b[1][0]++,contact.email)||(cov_1gaatz3rcn.b[1][1]++,''));cov_1gaatz3rcn.s[10]++;email=email.trim();let phones=(cov_1gaatz3rcn.s[11]++,(cov_1gaatz3rcn.b[2][0]++,contact.phones)||(cov_1gaatz3rcn.b[2][1]++,[]));cov_1gaatz3rcn.s[12]++;if(!name.length){cov_1gaatz3rcn.b[3][0]++;cov_1gaatz3rcn.s[13]++;throw'Contact must have a name';}else{cov_1gaatz3rcn.b[3][1]++;}const phoneNumbers=(cov_1gaatz3rcn.s[14]++,this.getValidPhones(phones));cov_1gaatz3rcn.s[15]++;if(!phoneNumbers.length){cov_1gaatz3rcn.b[4][0]++;cov_1gaatz3rcn.s[16]++;throw'Contact must have at least one phone number';}else{cov_1gaatz3rcn.b[4][1]++;}cov_1gaatz3rcn.s[17]++;for(let i=0;i<phoneNumbers.length;i++){const currentPhone=(cov_1gaatz3rcn.s[18]++,phoneNumbers[i]);cov_1gaatz3rcn.s[19]++;if(currentPhone.phoneNumber.length<10){cov_1gaatz3rcn.b[5][0]++;cov_1gaatz3rcn.s[20]++;throw'Phone numbers must be 10 digits long';}else{cov_1gaatz3rcn.b[5][1]++;}}const agencyId=(cov_1gaatz3rcn.s[21]++,(cov_1gaatz3rcn.b[6][0]++,contact.agencyId)||(cov_1gaatz3rcn.b[6][1]++,contact.agency));cov_1gaatz3rcn.s[22]++;if(!agencyId){cov_1gaatz3rcn.b[7][0]++;cov_1gaatz3rcn.s[23]++;throw'Contact must be assigned to an agency';}else{cov_1gaatz3rcn.b[7][1]++;}let id=(cov_1gaatz3rcn.s[24]++,(cov_1gaatz3rcn.b[8][0]++,contact._id)||(cov_1gaatz3rcn.b[8][1]++,contact.id));cov_1gaatz3rcn.s[25]++;if(id){cov_1gaatz3rcn.b[9][0]++;//Contact already exists
const contactObjectId=(cov_1gaatz3rcn.s[26]++,mongoose.Types.ObjectId(id));const findQuery=(cov_1gaatz3rcn.s[27]++,{_id:contactObjectId});const updateQuery=(cov_1gaatz3rcn.s[28]++,{$set:{agency:agencyId,name:name,email:email,phones:phoneNumbers}});const options=(cov_1gaatz3rcn.s[29]++,{upsert:true});cov_1gaatz3rcn.s[30]++;return Contact.findOneAndUpdate(findQuery,updateQuery,options).exec();}else{cov_1gaatz3rcn.b[9][1]++;const newContact=(cov_1gaatz3rcn.s[31]++,new Contact({agency:agencyId,name:name,email:email,phones:phoneNumbers}));cov_1gaatz3rcn.s[32]++;return newContact.save();}}/**
	 * Adds the given contact to the given group on the given building-agency unit
	 * @param string buildingId
	 * @param string agencyId
	 * @param string groupId
	 * @param string contactId
	 * @return Promise
	 */addToBuildingAgency(buildingId,agencyId,groupId,contactId){cov_1gaatz3rcn.f[3]++;const groupObjectId=(cov_1gaatz3rcn.s[33]++,mongoose.Types.ObjectId(groupId));const contactObjectId=(cov_1gaatz3rcn.s[34]++,mongoose.Types.ObjectId(contactId));const findQuery=(cov_1gaatz3rcn.s[35]++,{buildingId:buildingId,agencyId:agencyId});const updateQuery=(cov_1gaatz3rcn.s[36]++,{$addToSet:{contacts:{contact:contactObjectId,contactGroup:groupObjectId}}});cov_1gaatz3rcn.s[37]++;return BuildingAgency.findOneAndUpdate(findQuery,updateQuery).exec();}/**
	 * Removes the given contact from the given group on the given building-agency unit
	 * @param string buildingId
	 * @param string agencyId
	 * @param string groupId
	 * @param string contactId
	 * @return Promise
	 */removeFromBuildingAgency(buildingId,agencyId,groupId,contactId){cov_1gaatz3rcn.f[4]++;const groupObjectId=(cov_1gaatz3rcn.s[38]++,mongoose.Types.ObjectId(groupId));const contactObjectId=(cov_1gaatz3rcn.s[39]++,mongoose.Types.ObjectId(contactId));const findQuery=(cov_1gaatz3rcn.s[40]++,{'contacts.contact':contactObjectId,'contacts.contactGroup':groupObjectId});const updateQuery=(cov_1gaatz3rcn.s[41]++,{$pull:{contacts:{contact:contactObjectId,contactGroup:groupObjectId}}});cov_1gaatz3rcn.s[42]++;return BuildingAgency.updateMany(findQuery,updateQuery);}/**
	 * Deletes the given Contact
	 * @param string contactId
	 * @return Promise
	 */deleteContact(contactId){cov_1gaatz3rcn.f[5]++;const contactObjectId=(cov_1gaatz3rcn.s[43]++,mongoose.Types.ObjectId(contactId));cov_1gaatz3rcn.s[44]++;return Contact.remove({_id:contactObjectId}).exec().then(()=>{cov_1gaatz3rcn.f[6]++;const findQuery=(cov_1gaatz3rcn.s[45]++,{'contacts.contact':contactObjectId});const updateQuery=(cov_1gaatz3rcn.s[46]++,{$pull:{'contacts.contact':contactObjectId}});cov_1gaatz3rcn.s[47]++;return BuildingAgency.updateMany(findQuery,updateQuery);});}/**
	 * Given a list of phone numbers, returns an array of only the valid ones
	 * @param PhoneNumber phones
	 * @return Promise
	 */getValidPhones(phones){cov_1gaatz3rcn.f[7]++;let phoneNumbers=(cov_1gaatz3rcn.s[48]++,[]);cov_1gaatz3rcn.s[49]++;for(let i=0;i<phones.length;i++){const currentPhone=(cov_1gaatz3rcn.s[50]++,phones[i]);let phoneNumber=(cov_1gaatz3rcn.s[51]++,(cov_1gaatz3rcn.b[10][0]++,currentPhone.phoneNumber)||(cov_1gaatz3rcn.b[10][1]++,''));cov_1gaatz3rcn.s[52]++;phoneNumber=phoneNumber.trim();let label=(cov_1gaatz3rcn.s[53]++,(cov_1gaatz3rcn.b[11][0]++,currentPhone.label)||(cov_1gaatz3rcn.b[11][1]++,''));cov_1gaatz3rcn.s[54]++;label=label.trim();let extension=(cov_1gaatz3rcn.s[55]++,(cov_1gaatz3rcn.b[12][0]++,currentPhone.extension)||(cov_1gaatz3rcn.b[12][1]++,''));cov_1gaatz3rcn.s[56]++;extension=extension.trim();cov_1gaatz3rcn.s[57]++;if((cov_1gaatz3rcn.b[14][0]++,phoneNumber.length>0)&&(cov_1gaatz3rcn.b[14][1]++,label.length>0)){cov_1gaatz3rcn.b[13][0]++;cov_1gaatz3rcn.s[58]++;phoneNumbers.push({phoneNumber:phoneNumber,label:label,extension:extension});}else{cov_1gaatz3rcn.b[13][1]++;}}cov_1gaatz3rcn.s[59]++;return phoneNumbers;}}cov_1gaatz3rcn.s[60]++;module.exports=ContactDao;