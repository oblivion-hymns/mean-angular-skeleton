var cov_2akcptdj3o=function(){var path='/home/bwilbur/projects/mercury/modules/incident/models/incident-dao.js',hash='b42081723b7cd12c4fca3a7381347edcd4aa495b',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/incident/models/incident-dao.js',statementMap:{'0':{start:{line:1,column:17},end:{line:1,column:36}},'1':{start:{line:2,column:17},end:{line:2,column:38}},'2':{start:{line:3,column:22},end:{line:3,column:49}},'3':{start:{line:4,column:26},end:{line:4,column:58}},'4':{start:{line:5,column:23},end:{line:5,column:83}},'5':{start:{line:6,column:16},end:{line:6,column:55}},'6':{start:{line:12,column:19},end:{line:19,column:3}},'7':{start:{line:20,column:2},end:{line:20,column:18}},'8':{start:{line:30,column:19},end:{line:30,column:44}},'9':{start:{line:31,column:2},end:{line:31,column:77}},'10':{start:{line:41,column:24},end:{line:41,column:56}},'11':{start:{line:42,column:2},end:{line:42,column:77}},'12':{start:{line:52,column:27},end:{line:52,column:62}},'13':{start:{line:53,column:2},end:{line:53,column:96}},'14':{start:{line:62,column:19},end:{line:62,column:44}},'15':{start:{line:63,column:2},end:{line:63,column:81}},'16':{start:{line:72,column:19},end:{line:72,column:44}},'17':{start:{line:73,column:2},end:{line:73,column:78}},'18':{start:{line:82,column:2},end:{line:82,column:56}},'19':{start:{line:93,column:2},end:{line:100,column:3}},'20':{start:{line:95,column:3},end:{line:95,column:10}},'21':{start:{line:97,column:7},end:{line:100,column:3}},'22':{start:{line:99,column:3},end:{line:99,column:26}},'23':{start:{line:103,column:2},end:{line:107,column:3}},'24':{start:{line:106,column:3},end:{line:106,column:48}},'25':{start:{line:110,column:2},end:{line:110,column:39}},'26':{start:{line:111,column:2},end:{line:114,column:3}},'27':{start:{line:113,column:3},end:{line:113,column:54}},'28':{start:{line:116,column:2},end:{line:119,column:3}},'29':{start:{line:118,column:3},end:{line:118,column:30}},'30':{start:{line:121,column:2},end:{line:131,column:3}},'31':{start:{line:123,column:3},end:{line:123,column:24}},'32':{start:{line:127,column:3},end:{line:130,column:4}},'33':{start:{line:129,column:4},end:{line:129,column:73}},'34':{start:{line:133,column:2},end:{line:133,column:89}},'35':{start:{line:144,column:27},end:{line:144,column:62}},'36':{start:{line:145,column:18},end:{line:145,column:42}},'37':{start:{line:146,column:2},end:{line:146,column:40}},'38':{start:{line:147,column:2},end:{line:147,column:58}},'39':{start:{line:148,column:2},end:{line:148,column:75}},'40':{start:{line:150,column:18},end:{line:184,column:4}},'41':{start:{line:152,column:29},end:{line:152,column:31}},'42':{start:{line:153,column:3},end:{line:156,column:4}},'43':{start:{line:155,column:4},end:{line:155,column:51}},'44':{start:{line:158,column:3},end:{line:161,column:4}},'45':{start:{line:160,column:4},end:{line:160,column:35}},'46':{start:{line:164,column:17},end:{line:164,column:32}},'47':{start:{line:165,column:21},end:{line:165,column:71}},'48':{start:{line:166,column:23},end:{line:166,column:41}},'49':{start:{line:167,column:3},end:{line:167,column:55}},'50':{start:{line:170,column:3},end:{line:170,column:27}},'51':{start:{line:173,column:25},end:{line:173,column:52}},'52':{start:{line:174,column:27},end:{line:174,column:57}},'53':{start:{line:175,column:3},end:{line:175,column:56}},'54':{start:{line:178,column:18},end:{line:178,column:25}},'55':{start:{line:179,column:20},end:{line:179,column:27}},'56':{start:{line:180,column:3},end:{line:180,column:28}},'57':{start:{line:181,column:3},end:{line:181,column:30}},'58':{start:{line:183,column:3},end:{line:183,column:37}},'59':{start:{line:186,column:2},end:{line:186,column:17}},'60':{start:{line:195,column:2},end:{line:195,column:67}},'61':{start:{line:197,column:18},end:{line:215,column:4}},'62':{start:{line:199,column:29},end:{line:199,column:31}},'63':{start:{line:200,column:3},end:{line:203,column:4}},'64':{start:{line:202,column:4},end:{line:202,column:51}},'65':{start:{line:205,column:3},end:{line:208,column:4}},'66':{start:{line:207,column:4},end:{line:207,column:31}},'67':{start:{line:210,column:21},end:{line:210,column:36}},'68':{start:{line:211,column:23},end:{line:211,column:81}},'69':{start:{line:212,column:3},end:{line:212,column:55}},'70':{start:{line:214,column:3},end:{line:214,column:37}},'71':{start:{line:217,column:2},end:{line:217,column:17}},'72':{start:{line:228,column:27},end:{line:228,column:62}},'73':{start:{line:231,column:16},end:{line:231,column:27}},'74':{start:{line:232,column:20},end:{line:232,column:69}},'75':{start:{line:233,column:22},end:{line:233,column:41}},'76':{start:{line:234,column:18},end:{line:250,column:4}},'77':{start:{line:236,column:3},end:{line:236,column:55}},'78':{start:{line:239,column:25},end:{line:239,column:52}},'79':{start:{line:240,column:27},end:{line:240,column:57}},'80':{start:{line:241,column:3},end:{line:241,column:56}},'81':{start:{line:244,column:18},end:{line:244,column:25}},'82':{start:{line:245,column:20},end:{line:245,column:27}},'83':{start:{line:246,column:3},end:{line:246,column:28}},'84':{start:{line:247,column:3},end:{line:247,column:30}},'85':{start:{line:249,column:3},end:{line:249,column:37}},'86':{start:{line:252,column:2},end:{line:252,column:17}},'87':{start:{line:264,column:27},end:{line:264,column:62}},'88':{start:{line:266,column:17},end:{line:266,column:21}},'89':{start:{line:267,column:17},end:{line:267,column:22}},'90':{start:{line:270,column:18},end:{line:305,column:4}},'91':{start:{line:271,column:3},end:{line:271,column:26}},'92':{start:{line:274,column:19},end:{line:274,column:21}},'93':{start:{line:275,column:21},end:{line:275,column:23}},'94':{start:{line:276,column:3},end:{line:285,column:4}},'95':{start:{line:278,column:4},end:{line:278,column:85}},'96':{start:{line:279,column:4},end:{line:279,column:37}},'97':{start:{line:281,column:8},end:{line:285,column:4}},'98':{start:{line:283,column:4},end:{line:283,column:85}},'99':{start:{line:284,column:4},end:{line:284,column:38}},'100':{start:{line:288,column:19},end:{line:302,column:5}},'101':{start:{line:289,column:4},end:{line:289,column:27}},'102':{start:{line:290,column:4},end:{line:290,column:17}},'103':{start:{line:293,column:26},end:{line:293,column:53}},'104':{start:{line:294,column:28},end:{line:294,column:58}},'105':{start:{line:295,column:4},end:{line:295,column:57}},'106':{start:{line:298,column:19},end:{line:298,column:26}},'107':{start:{line:299,column:21},end:{line:299,column:28}},'108':{start:{line:300,column:4},end:{line:300,column:29}},'109':{start:{line:301,column:4},end:{line:301,column:31}},'110':{start:{line:304,column:3},end:{line:304,column:18}},'111':{start:{line:307,column:2},end:{line:307,column:17}},'112':{start:{line:318,column:2},end:{line:330,column:5}},'113':{start:{line:319,column:3},end:{line:319,column:29}},'114':{start:{line:320,column:3},end:{line:329,column:6}},'115':{start:{line:321,column:27},end:{line:321,column:47}},'116':{start:{line:322,column:20},end:{line:322,column:33}},'117':{start:{line:323,column:4},end:{line:326,column:7}},'118':{start:{line:324,column:18},end:{line:324,column:47}},'119':{start:{line:325,column:5},end:{line:325,column:95}},'120':{start:{line:328,column:4},end:{line:328,column:38}},'121':{start:{line:340,column:16},end:{line:340,column:35}},'122':{start:{line:341,column:18},end:{line:356,column:4}},'123':{start:{line:342,column:3},end:{line:355,column:4}},'124':{start:{line:344,column:22},end:{line:344,column:34}},'125':{start:{line:345,column:18},end:{line:345,column:68}},'126':{start:{line:346,column:19},end:{line:351,column:5}},'127':{start:{line:352,column:4},end:{line:354,column:7}},'128':{start:{line:353,column:5},end:{line:353,column:39}},'129':{start:{line:358,column:2},end:{line:358,column:17}},'130':{start:{line:366,column:36},end:{line:366,column:106}},'131':{start:{line:367,column:36},end:{line:367,column:67}},'132':{start:{line:368,column:2},end:{line:368,column:40}},'133':{start:{line:372,column:0},end:{line:372,column:29}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:10,column:1},end:{line:10,column:2}},loc:{start:{line:11,column:1},end:{line:21,column:2}},line:11},'1':{name:'(anonymous_1)',decl:{start:{line:28,column:1},end:{line:28,column:2}},loc:{start:{line:29,column:1},end:{line:32,column:2}},line:29},'2':{name:'(anonymous_2)',decl:{start:{line:39,column:1},end:{line:39,column:2}},loc:{start:{line:40,column:1},end:{line:43,column:2}},line:40},'3':{name:'(anonymous_3)',decl:{start:{line:50,column:1},end:{line:50,column:2}},loc:{start:{line:51,column:1},end:{line:54,column:2}},line:51},'4':{name:'(anonymous_4)',decl:{start:{line:60,column:1},end:{line:60,column:2}},loc:{start:{line:61,column:1},end:{line:64,column:2}},line:61},'5':{name:'(anonymous_5)',decl:{start:{line:70,column:1},end:{line:70,column:2}},loc:{start:{line:71,column:1},end:{line:74,column:2}},line:71},'6':{name:'(anonymous_6)',decl:{start:{line:80,column:1},end:{line:80,column:2}},loc:{start:{line:81,column:1},end:{line:83,column:2}},line:81},'7':{name:'(anonymous_7)',decl:{start:{line:90,column:1},end:{line:90,column:2}},loc:{start:{line:91,column:1},end:{line:134,column:2}},line:91},'8':{name:'(anonymous_8)',decl:{start:{line:142,column:1},end:{line:142,column:2}},loc:{start:{line:143,column:1},end:{line:187,column:2}},line:143},'9':{name:'(anonymous_9)',decl:{start:{line:150,column:51},end:{line:150,column:52}},loc:{start:{line:150,column:61},end:{line:168,column:3}},line:150},'10':{name:'(anonymous_10)',decl:{start:{line:168,column:10},end:{line:168,column:11}},loc:{start:{line:168,column:16},end:{line:171,column:3}},line:168},'11':{name:'(anonymous_11)',decl:{start:{line:171,column:10},end:{line:171,column:11}},loc:{start:{line:171,column:16},end:{line:176,column:3}},line:171},'12':{name:'(anonymous_12)',decl:{start:{line:176,column:10},end:{line:176,column:11}},loc:{start:{line:176,column:18},end:{line:182,column:3}},line:176},'13':{name:'(anonymous_13)',decl:{start:{line:182,column:10},end:{line:182,column:11}},loc:{start:{line:182,column:16},end:{line:184,column:3}},line:182},'14':{name:'(anonymous_14)',decl:{start:{line:193,column:1},end:{line:193,column:2}},loc:{start:{line:194,column:1},end:{line:218,column:2}},line:194},'15':{name:'(anonymous_15)',decl:{start:{line:197,column:57},end:{line:197,column:58}},loc:{start:{line:197,column:67},end:{line:209,column:3}},line:197},'16':{name:'(anonymous_16)',decl:{start:{line:209,column:10},end:{line:209,column:11}},loc:{start:{line:209,column:16},end:{line:213,column:3}},line:209},'17':{name:'(anonymous_17)',decl:{start:{line:213,column:10},end:{line:213,column:11}},loc:{start:{line:213,column:16},end:{line:215,column:3}},line:213},'18':{name:'(anonymous_18)',decl:{start:{line:226,column:1},end:{line:226,column:2}},loc:{start:{line:227,column:1},end:{line:253,column:2}},line:227},'19':{name:'(anonymous_19)',decl:{start:{line:234,column:68},end:{line:234,column:69}},loc:{start:{line:234,column:74},end:{line:237,column:3}},line:234},'20':{name:'(anonymous_20)',decl:{start:{line:237,column:10},end:{line:237,column:11}},loc:{start:{line:237,column:16},end:{line:242,column:3}},line:237},'21':{name:'(anonymous_21)',decl:{start:{line:242,column:10},end:{line:242,column:11}},loc:{start:{line:242,column:18},end:{line:248,column:3}},line:242},'22':{name:'(anonymous_22)',decl:{start:{line:248,column:10},end:{line:248,column:11}},loc:{start:{line:248,column:16},end:{line:250,column:3}},line:248},'23':{name:'(anonymous_23)',decl:{start:{line:262,column:1},end:{line:262,column:2}},loc:{start:{line:263,column:1},end:{line:308,column:2}},line:263},'24':{name:'(anonymous_24)',decl:{start:{line:270,column:47},end:{line:270,column:48}},loc:{start:{line:270,column:56},end:{line:305,column:3}},line:270},'25':{name:'(anonymous_25)',decl:{start:{line:288,column:84},end:{line:288,column:85}},loc:{start:{line:288,column:90},end:{line:291,column:4}},line:288},'26':{name:'(anonymous_26)',decl:{start:{line:291,column:11},end:{line:291,column:12}},loc:{start:{line:291,column:17},end:{line:296,column:4}},line:291},'27':{name:'(anonymous_27)',decl:{start:{line:296,column:11},end:{line:296,column:12}},loc:{start:{line:296,column:19},end:{line:302,column:4}},line:296},'28':{name:'(anonymous_28)',decl:{start:{line:316,column:1},end:{line:316,column:2}},loc:{start:{line:317,column:1},end:{line:331,column:2}},line:317},'29':{name:'(anonymous_29)',decl:{start:{line:318,column:39},end:{line:318,column:40}},loc:{start:{line:318,column:51},end:{line:330,column:3}},line:318},'30':{name:'(anonymous_30)',decl:{start:{line:320,column:31},end:{line:320,column:32}},loc:{start:{line:320,column:37},end:{line:329,column:4}},line:320},'31':{name:'(anonymous_31)',decl:{start:{line:323,column:44},end:{line:323,column:45}},loc:{start:{line:323,column:52},end:{line:326,column:5}},line:323},'32':{name:'(anonymous_32)',decl:{start:{line:338,column:1},end:{line:338,column:2}},loc:{start:{line:339,column:1},end:{line:359,column:2}},line:339},'33':{name:'(anonymous_33)',decl:{start:{line:341,column:54},end:{line:341,column:55}},loc:{start:{line:341,column:66},end:{line:356,column:3}},line:341},'34':{name:'(anonymous_34)',decl:{start:{line:352,column:64},end:{line:352,column:65}},loc:{start:{line:352,column:70},end:{line:354,column:5}},line:352},'35':{name:'(anonymous_35)',decl:{start:{line:364,column:1},end:{line:364,column:2}},loc:{start:{line:365,column:1},end:{line:369,column:2}},line:365}},branchMap:{'0':{loc:{start:{line:93,column:2},end:{line:100,column:3}},type:'if',locations:[{start:{line:93,column:2},end:{line:100,column:3}},{start:{line:93,column:2},end:{line:100,column:3}}],line:93},'1':{loc:{start:{line:97,column:7},end:{line:100,column:3}},type:'if',locations:[{start:{line:97,column:7},end:{line:100,column:3}},{start:{line:97,column:7},end:{line:100,column:3}}],line:97},'2':{loc:{start:{line:103,column:2},end:{line:107,column:3}},type:'if',locations:[{start:{line:103,column:2},end:{line:107,column:3}},{start:{line:103,column:2},end:{line:107,column:3}}],line:103},'3':{loc:{start:{line:111,column:2},end:{line:114,column:3}},type:'if',locations:[{start:{line:111,column:2},end:{line:114,column:3}},{start:{line:111,column:2},end:{line:114,column:3}}],line:111},'4':{loc:{start:{line:116,column:2},end:{line:119,column:3}},type:'if',locations:[{start:{line:116,column:2},end:{line:119,column:3}},{start:{line:116,column:2},end:{line:119,column:3}}],line:116},'5':{loc:{start:{line:121,column:2},end:{line:131,column:3}},type:'if',locations:[{start:{line:121,column:2},end:{line:131,column:3}},{start:{line:121,column:2},end:{line:131,column:3}}],line:121},'6':{loc:{start:{line:121,column:6},end:{line:121,column:49}},type:'binary-expr',locations:[{start:{line:121,column:6},end:{line:121,column:22}},{start:{line:121,column:26},end:{line:121,column:49}}],line:121},'7':{loc:{start:{line:129,column:25},end:{line:129,column:72}},type:'binary-expr',locations:[{start:{line:129,column:25},end:{line:129,column:46}},{start:{line:129,column:50},end:{line:129,column:72}}],line:129},'8':{loc:{start:{line:276,column:3},end:{line:285,column:4}},type:'if',locations:[{start:{line:276,column:3},end:{line:285,column:4}},{start:{line:276,column:3},end:{line:285,column:4}}],line:276},'9':{loc:{start:{line:281,column:8},end:{line:285,column:4}},type:'if',locations:[{start:{line:281,column:8},end:{line:285,column:4}},{start:{line:281,column:8},end:{line:285,column:4}}],line:281},'10':{loc:{start:{line:342,column:3},end:{line:355,column:4}},type:'if',locations:[{start:{line:342,column:3},end:{line:355,column:4}},{start:{line:342,column:3},end:{line:355,column:4}}],line:342}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0,'52':0,'53':0,'54':0,'55':0,'56':0,'57':0,'58':0,'59':0,'60':0,'61':0,'62':0,'63':0,'64':0,'65':0,'66':0,'67':0,'68':0,'69':0,'70':0,'71':0,'72':0,'73':0,'74':0,'75':0,'76':0,'77':0,'78':0,'79':0,'80':0,'81':0,'82':0,'83':0,'84':0,'85':0,'86':0,'87':0,'88':0,'89':0,'90':0,'91':0,'92':0,'93':0,'94':0,'95':0,'96':0,'97':0,'98':0,'99':0,'100':0,'101':0,'102':0,'103':0,'104':0,'105':0,'106':0,'107':0,'108':0,'109':0,'110':0,'111':0,'112':0,'113':0,'114':0,'115':0,'116':0,'117':0,'118':0,'119':0,'120':0,'121':0,'122':0,'123':0,'124':0,'125':0,'126':0,'127':0,'128':0,'129':0,'130':0,'131':0,'132':0,'133':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const mongoose=(cov_2akcptdj3o.s[0]++,require('mongoose'));const Incident=(cov_2akcptdj3o.s[1]++,require('./incident'));const IncidentField=(cov_2akcptdj3o.s[2]++,require('./incident-field'));const IncidentFieldType=(cov_2akcptdj3o.s[3]++,require('./incident-field-type'));const MailDispatcher=(cov_2akcptdj3o.s[4]++,require('./../../communication/models/mail/mail-dispatcher'));const RoleDao=(cov_2akcptdj3o.s[5]++,require('./../../auth/models/role-dao'));class IncidentDao{getPopulateOptions(){cov_2akcptdj3o.f[0]++;const populate=(cov_2akcptdj3o.s[6]++,{path:'fields',model:'IncidentField',populate:{path:'type',model:'IncidentFieldType'}});cov_2akcptdj3o.s[7]++;return populate;}/**
	 * Returns a single incident, or false if it doesn't exist
	 * @param string id
	 * @return Promise
	 */loadOne(id){cov_2akcptdj3o.f[1]++;const populate=(cov_2akcptdj3o.s[8]++,this.getPopulateOptions());cov_2akcptdj3o.s[9]++;return Incident.findOne({_id:id,active:true}).populate(populate).exec();}/**
	 * Returns the given field
	 * @param string fieldId
	 * @return Promise
	 */loadField(fieldId){cov_2akcptdj3o.f[2]++;const fieldObjectId=(cov_2akcptdj3o.s[10]++,mongoose.Types.ObjectId(fieldId));cov_2akcptdj3o.s[11]++;return IncidentField.findOne({_id:fieldObjectId}).populate('type').exec();}/**
	 * Returns a list of the fields for the given incident
	 * @param string incidentId
	 * @return Promise
	 */loadFields(incidentId){cov_2akcptdj3o.f[3]++;const incidentObjectId=(cov_2akcptdj3o.s[12]++,mongoose.Types.ObjectId(incidentId));cov_2akcptdj3o.s[13]++;return IncidentField.find({incident:incidentObjectId}).populate('type').sort('order').exec();}/**
	 * Loads all incidents that have been published
	 * @return Promise
	 */loadPublished(){cov_2akcptdj3o.f[4]++;const populate=(cov_2akcptdj3o.s[14]++,this.getPopulateOptions());cov_2akcptdj3o.s[15]++;return Incident.find({published:true}).sort('name').populate(populate).exec();}/**
	 * Returns a list of all incidents
	 * @return Promise
	 */loadAll(){cov_2akcptdj3o.f[5]++;const populate=(cov_2akcptdj3o.s[16]++,this.getPopulateOptions());cov_2akcptdj3o.s[17]++;return Incident.find({active:true}).sort('name').populate(populate).exec();}/**
	 * Returns a list of all field types
	 * @return Promise
	 */loadFieldTypes(){cov_2akcptdj3o.f[6]++;cov_2akcptdj3o.s[18]++;return IncidentFieldType.find({}).sort('name').exec();}/**
	 * Saves the given incident
	 * @param Incident incident
	 * @return Promise
	 */save(incident){cov_2akcptdj3o.f[7]++;cov_2akcptdj3o.s[19]++;//Can't save an inactive incident
if(incident.active===false){cov_2akcptdj3o.b[0][0]++;cov_2akcptdj3o.s[20]++;return;}else{cov_2akcptdj3o.b[0][1]++;cov_2akcptdj3o.s[21]++;if(!incident.active){cov_2akcptdj3o.b[1][0]++;cov_2akcptdj3o.s[22]++;incident.active=true;}else{cov_2akcptdj3o.b[1][1]++;}}//If incident is new, assign an ID
cov_2akcptdj3o.s[23]++;if(!incident._id){cov_2akcptdj3o.b[2][0]++;cov_2akcptdj3o.s[24]++;//Incident is new
incident._id=new mongoose.mongo.ObjectID();}else{cov_2akcptdj3o.b[2][1]++;}//Trim properties
cov_2akcptdj3o.s[25]++;incident.name=incident.name.trim();cov_2akcptdj3o.s[26]++;if(incident.description){cov_2akcptdj3o.b[3][0]++;cov_2akcptdj3o.s[27]++;incident.description=incident.description.trim();}else{cov_2akcptdj3o.b[3][1]++;}cov_2akcptdj3o.s[28]++;if(!incident.published){cov_2akcptdj3o.b[4][0]++;cov_2akcptdj3o.s[29]++;incident.published=false;}else{cov_2akcptdj3o.b[4][1]++;}cov_2akcptdj3o.s[30]++;if((cov_2akcptdj3o.b[6][0]++,!incident.fields)||(cov_2akcptdj3o.b[6][1]++,!incident.fields.length)){cov_2akcptdj3o.b[5][0]++;cov_2akcptdj3o.s[31]++;incident.fields=[];}else{cov_2akcptdj3o.b[5][1]++;cov_2akcptdj3o.s[32]++;for(let i=0;i<incident.fields.length;i++){cov_2akcptdj3o.s[33]++;incident.fields[i]=(cov_2akcptdj3o.b[7][0]++,incident.fields[i].id)||(cov_2akcptdj3o.b[7][1]++,incident.fields[i]._id);}}cov_2akcptdj3o.s[34]++;return Incident.findOneAndUpdate({_id:incident._id},incident,{upsert:true}).exec();}/**
	 * Adds the given field to the given incident
	 * @param string incidentId
	 * @param IncidentField field
	 * @return Promise
	 */addField(incidentId,field){cov_2akcptdj3o.f[8]++;const incidentObjectId=(cov_2akcptdj3o.s[35]++,mongoose.Types.ObjectId(incidentId));let saveField=(cov_2akcptdj3o.s[36]++,new IncidentField(field));cov_2akcptdj3o.s[37]++;saveField.incident=incidentObjectId;cov_2akcptdj3o.s[38]++;saveField.type=mongoose.Types.ObjectId(field.type.id);cov_2akcptdj3o.s[39]++;saveField.identifier=saveField.label.toLowerCase().replace(/\s/g,'_');const promise=(cov_2akcptdj3o.s[40]++,this.loadFields(incidentId).then(fields=>{cov_2akcptdj3o.f[9]++;//Construct field identifier
let existingIdentifiers=(cov_2akcptdj3o.s[41]++,[]);cov_2akcptdj3o.s[42]++;for(let i=0;i<fields.length;i++){cov_2akcptdj3o.s[43]++;existingIdentifiers.push(fields[i].identifier);}cov_2akcptdj3o.s[44]++;while(existingIdentifiers.indexOf(saveField.identifier)>-1){cov_2akcptdj3o.s[45]++;saveField.identifier+='_(2)';}//Update order of existing fields
const order=(cov_2akcptdj3o.s[46]++,saveField.order);const findQuery=(cov_2akcptdj3o.s[47]++,{incident:incidentObjectId,order:{$gte:order}});const updateQuery=(cov_2akcptdj3o.s[48]++,{$inc:{order:1}});cov_2akcptdj3o.s[49]++;return IncidentField.update(findQuery,updateQuery);}).then(()=>{cov_2akcptdj3o.f[10]++;cov_2akcptdj3o.s[50]++;//Save field
return saveField.save();}).then(()=>{cov_2akcptdj3o.f[11]++;//Collect data to update incident field references
const fieldsPromise=(cov_2akcptdj3o.s[51]++,this.loadFields(incidentId));const incidentPromise=(cov_2akcptdj3o.s[52]++,this.loadOne(incidentObjectId));cov_2akcptdj3o.s[53]++;return Promise.all([fieldsPromise,incidentPromise]);}).then(data=>{cov_2akcptdj3o.f[12]++;//Update references on incident
const fields=(cov_2akcptdj3o.s[54]++,data[0]);const incident=(cov_2akcptdj3o.s[55]++,data[1]);cov_2akcptdj3o.s[56]++;incident.fields=fields;cov_2akcptdj3o.s[57]++;return this.save(incident);}).then(()=>{cov_2akcptdj3o.f[13]++;cov_2akcptdj3o.s[58]++;this.updateBuildingAgencyHealth();}));cov_2akcptdj3o.s[59]++;return promise;}/**
	 * Saves the given field
	 * @param IncidentField field
	 */saveField(field){cov_2akcptdj3o.f[14]++;cov_2akcptdj3o.s[60]++;field.identifier=field.label.toLowerCase().replace(/\s/g,'_');const promise=(cov_2akcptdj3o.s[61]++,this.loadFields(field.incidentId).then(fields=>{cov_2akcptdj3o.f[15]++;//Construct field identifier
let existingIdentifiers=(cov_2akcptdj3o.s[62]++,[]);cov_2akcptdj3o.s[63]++;for(let i=0;i<fields.length;i++){cov_2akcptdj3o.s[64]++;existingIdentifiers.push(fields[i].identifier);}cov_2akcptdj3o.s[65]++;while(existingIdentifiers.indexOf(field.identifier)>-1){cov_2akcptdj3o.s[66]++;field.identifier+='_(2)';}}).then(()=>{cov_2akcptdj3o.f[16]++;const findQuery=(cov_2akcptdj3o.s[67]++,{_id:field.id});const updateQuery=(cov_2akcptdj3o.s[68]++,{$set:{properties:field.properties,label:field.label}});cov_2akcptdj3o.s[69]++;return IncidentField.update(findQuery,updateQuery);}).then(()=>{cov_2akcptdj3o.f[17]++;cov_2akcptdj3o.s[70]++;this.updateBuildingAgencyHealth();}));cov_2akcptdj3o.s[71]++;return promise;}/**
	 * Removes the given field from the given incident
	 * @param string incidentId
	 * @param IncidentField field
	 * @return Promise
	 */removeField(incidentId,field){cov_2akcptdj3o.f[18]++;const incidentObjectId=(cov_2akcptdj3o.s[72]++,mongoose.Types.ObjectId(incidentId));//Update order of existing fields
const order=(cov_2akcptdj3o.s[73]++,field.order);const findQuery=(cov_2akcptdj3o.s[74]++,{incident:incidentObjectId,order:{$gt:order}});const updateQuery=(cov_2akcptdj3o.s[75]++,{$inc:{order:-1}});const promise=(cov_2akcptdj3o.s[76]++,IncidentField.update(findQuery,updateQuery).then(()=>{cov_2akcptdj3o.f[19]++;cov_2akcptdj3o.s[77]++;//Delete field
return IncidentField.remove({_id:field.id}).exec();}).then(()=>{cov_2akcptdj3o.f[20]++;//Collect data to update incident field references
const fieldsPromise=(cov_2akcptdj3o.s[78]++,this.loadFields(incidentId));const incidentPromise=(cov_2akcptdj3o.s[79]++,this.loadOne(incidentObjectId));cov_2akcptdj3o.s[80]++;return Promise.all([fieldsPromise,incidentPromise]);}).then(data=>{cov_2akcptdj3o.f[21]++;//Update references on incident
const fields=(cov_2akcptdj3o.s[81]++,data[0]);const incident=(cov_2akcptdj3o.s[82]++,data[1]);cov_2akcptdj3o.s[83]++;incident.fields=fields;cov_2akcptdj3o.s[84]++;return this.save(incident);}).then(()=>{cov_2akcptdj3o.f[22]++;cov_2akcptdj3o.s[85]++;this.updateBuildingAgencyHealth();}));cov_2akcptdj3o.s[86]++;return promise;}/**
	 * Moves the given field to the given order within the given incident
	 * @param string incidentId
	 * @param string fieldId
	 * @param number order
	 * @return Promise
	 */reorderField(incidentId,fieldId,order){cov_2akcptdj3o.f[23]++;const incidentObjectId=(cov_2akcptdj3o.s[87]++,mongoose.Types.ObjectId(incidentId));let oldOrder=(cov_2akcptdj3o.s[88]++,null);let newOrder=(cov_2akcptdj3o.s[89]++,order);//Just find the existing field, remove it, and add it back
const promise=(cov_2akcptdj3o.s[90]++,this.loadField(fieldId).then(field=>{cov_2akcptdj3o.f[24]++;cov_2akcptdj3o.s[91]++;oldOrder=field.order;//Adjust existing orders based on new position of the re-ordered item
let findQuery=(cov_2akcptdj3o.s[92]++,{});let updateQuery=(cov_2akcptdj3o.s[93]++,{});cov_2akcptdj3o.s[94]++;if(newOrder<oldOrder){cov_2akcptdj3o.b[8][0]++;cov_2akcptdj3o.s[95]++;findQuery={incident:incidentObjectId,order:{$lt:oldOrder,$gte:newOrder}};cov_2akcptdj3o.s[96]++;updateQuery={$inc:{order:1}};}else{cov_2akcptdj3o.b[8][1]++;cov_2akcptdj3o.s[97]++;if(newOrder>oldOrder){cov_2akcptdj3o.b[9][0]++;cov_2akcptdj3o.s[98]++;findQuery={incident:incidentObjectId,order:{$gt:oldOrder,$lte:newOrder}};cov_2akcptdj3o.s[99]++;updateQuery={$inc:{order:-1}};}else{cov_2akcptdj3o.b[9][1]++;}}//Decrement fields above the old position and below the new position
const promise=(cov_2akcptdj3o.s[100]++,IncidentField.update(findQuery,updateQuery,{multi:true}).then(()=>{cov_2akcptdj3o.f[25]++;cov_2akcptdj3o.s[101]++;field.order=newOrder;cov_2akcptdj3o.s[102]++;field.save();}).then(()=>{cov_2akcptdj3o.f[26]++;//Collect data to update incident field references
const fieldsPromise=(cov_2akcptdj3o.s[103]++,this.loadFields(incidentId));const incidentPromise=(cov_2akcptdj3o.s[104]++,this.loadOne(incidentObjectId));cov_2akcptdj3o.s[105]++;return Promise.all([fieldsPromise,incidentPromise]);}).then(data=>{cov_2akcptdj3o.f[27]++;//Update references on incident
const fields=(cov_2akcptdj3o.s[106]++,data[0]);const incident=(cov_2akcptdj3o.s[107]++,data[1]);cov_2akcptdj3o.s[108]++;incident.fields=fields;cov_2akcptdj3o.s[109]++;return this.save(incident);}));cov_2akcptdj3o.s[110]++;return promise;}));cov_2akcptdj3o.s[111]++;return promise;}/**
	 * Publishes the incident. This means that Building Reps are now allowed to fill out
	 * this incident's form
	 * @param string incidentId
	 * @return Promise
	 */publish(incidentId){cov_2akcptdj3o.f[28]++;cov_2akcptdj3o.s[112]++;return this.loadOne(incidentId).then(incident=>{cov_2akcptdj3o.f[29]++;cov_2akcptdj3o.s[113]++;incident.published=true;cov_2akcptdj3o.s[114]++;return incident.save().then(()=>{cov_2akcptdj3o.f[30]++;const mailDispatcher=(cov_2akcptdj3o.s[115]++,new MailDispatcher());const roleDao=(cov_2akcptdj3o.s[116]++,new RoleDao());cov_2akcptdj3o.s[117]++;roleDao.loadByName('Building Rep').then(role=>{cov_2akcptdj3o.f[31]++;const args=(cov_2akcptdj3o.s[118]++,{incidentName:incident.name});cov_2akcptdj3o.s[119]++;mailDispatcher.sendEmailToRole(role,'Emergency Plan Required','incident/publish',args);});cov_2akcptdj3o.s[120]++;this.updateBuildingAgencyHealth();});});}/**
	 * Archives the given incident, rendering it un-viewable and un-usuable by all end-users
	 * @param string incidentId
	 * @return Promise
	 */archive(incidentId){cov_2akcptdj3o.f[32]++;const query=(cov_2akcptdj3o.s[121]++,{'_id':incidentId});const promise=(cov_2akcptdj3o.s[122]++,Incident.findOne(query).exec().then(incident=>{cov_2akcptdj3o.f[33]++;cov_2akcptdj3o.s[123]++;if(incident){cov_2akcptdj3o.b[10][0]++;const timestamp=(cov_2akcptdj3o.s[124]++,+new Date());let newName=(cov_2akcptdj3o.s[125]++,incident.name+' (Archived on '+timestamp+')');const update=(cov_2akcptdj3o.s[126]++,{$set:{active:false,name:newName}});cov_2akcptdj3o.s[127]++;return Incident.findOneAndUpdate(query,update).exec().then(()=>{cov_2akcptdj3o.f[34]++;cov_2akcptdj3o.s[128]++;this.updateBuildingAgencyHealth();});}else{cov_2akcptdj3o.b[10][1]++;}}));cov_2akcptdj3o.s[129]++;return promise;}/**
	 * Updates the health of all building-agency units
	 */updateBuildingAgencyHealth(){cov_2akcptdj3o.f[35]++;const BuildingAgencyIncidentDao=(cov_2akcptdj3o.s[130]++,require('./../../building-agency/models/building-agency-incident-dao'));const buildingAgencyIncidentDao=(cov_2akcptdj3o.s[131]++,new BuildingAgencyIncidentDao());cov_2akcptdj3o.s[132]++;buildingAgencyIncidentDao.updateAll();}}cov_2akcptdj3o.s[133]++;module.exports=IncidentDao;