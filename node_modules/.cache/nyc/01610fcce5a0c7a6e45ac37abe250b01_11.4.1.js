var cov_3p060kc3c=function(){var path='/home/bwilbur/projects/mercury/modules/personnel/models/personnel-dao.js',hash='6ecee3816090bd2cbfb9d5eb68524ce172105e72',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/personnel/models/personnel-dao.js',statementMap:{'0':{start:{line:1,column:19},end:{line:1,column:60}},'1':{start:{line:12,column:2},end:{line:12,column:24}},'2':{start:{line:22,column:21},end:{line:22,column:37}},'3':{start:{line:23,column:18},end:{line:23,column:54}},'4':{start:{line:24,column:2},end:{line:24,column:17}},'5':{start:{line:34,column:21},end:{line:34,column:37}},'6':{start:{line:35,column:17},end:{line:38,column:3}},'7':{start:{line:39,column:18},end:{line:41,column:4}},'8':{start:{line:40,column:3},end:{line:40,column:45}},'9':{start:{line:42,column:2},end:{line:42,column:17}},'10':{start:{line:53,column:21},end:{line:53,column:37}},'11':{start:{line:54,column:17},end:{line:58,column:3}},'12':{start:{line:59,column:18},end:{line:61,column:4}},'13':{start:{line:60,column:3},end:{line:60,column:45}},'14':{start:{line:62,column:2},end:{line:62,column:17}},'15':{start:{line:66,column:0},end:{line:66,column:30}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:10,column:1},end:{line:10,column:2}},loc:{start:{line:11,column:1},end:{line:13,column:2}},line:11},'1':{name:'(anonymous_1)',decl:{start:{line:20,column:1},end:{line:20,column:2}},loc:{start:{line:21,column:1},end:{line:25,column:2}},line:21},'2':{name:'(anonymous_2)',decl:{start:{line:32,column:1},end:{line:32,column:2}},loc:{start:{line:33,column:1},end:{line:43,column:2}},line:33},'3':{name:'(anonymous_3)',decl:{start:{line:39,column:71},end:{line:39,column:72}},loc:{start:{line:39,column:84},end:{line:41,column:3}},line:39},'4':{name:'(anonymous_4)',decl:{start:{line:51,column:1},end:{line:51,column:2}},loc:{start:{line:52,column:1},end:{line:63,column:2}},line:52},'5':{name:'(anonymous_5)',decl:{start:{line:59,column:71},end:{line:59,column:72}},loc:{start:{line:59,column:84},end:{line:61,column:3}},line:59}},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const ApiService=(cov_3p060kc3c.s[0]++,require('./../../api/models/api-service'));class PersonnelDao{/**
	 * Given a Sequoia "Employee" response, returns just the value of the employee key
	 * @param any[] data
	 * @return Personnel[]
	 */convertToPersonnel(data){cov_3p060kc3c.f[0]++;cov_3p060kc3c.s[1]++;return data.employees;}/**
	 * Loads a single personnel with the given ID
	 * @param string id
	 * @return Promise
	 */loadOne(id){cov_3p060kc3c.f[1]++;const apiService=(cov_3p060kc3c.s[2]++,new ApiService());const promise=(cov_3p060kc3c.s[3]++,apiService.apiGet('/employee/'+id));cov_3p060kc3c.s[4]++;return promise;}/**
	 * Loads a list of all personnel in the given building
	 * @param string buildingId
	 * @return Promise
	 */loadForBuilding(buildingId){cov_3p060kc3c.f[2]++;const apiService=(cov_3p060kc3c.s[5]++,new ApiService());const params=(cov_3p060kc3c.s[6]++,{buildingid:buildingId,include:'agency,building'});const promise=(cov_3p060kc3c.s[7]++,apiService.apiGet('/employee/building',params).then(employees=>{cov_3p060kc3c.f[3]++;cov_3p060kc3c.s[8]++;return this.convertToPersonnel(employees);}));cov_3p060kc3c.s[9]++;return promise;}/**
	 * Loads a list of all personnel in the given building
	 * @param string buildingId
	 * @param string floor
	 * @return Promise
	 */loadForBuildingAndFloor(buildingId,floor){cov_3p060kc3c.f[4]++;const apiService=(cov_3p060kc3c.s[10]++,new ApiService());const params=(cov_3p060kc3c.s[11]++,{buildingid:buildingId,floor:floor,include:'agency,building'});const promise=(cov_3p060kc3c.s[12]++,apiService.apiGet('/employee/building',params).then(employees=>{cov_3p060kc3c.f[5]++;cov_3p060kc3c.s[13]++;return this.convertToPersonnel(employees);}));cov_3p060kc3c.s[14]++;return promise;}}cov_3p060kc3c.s[15]++;module.exports=PersonnelDao;