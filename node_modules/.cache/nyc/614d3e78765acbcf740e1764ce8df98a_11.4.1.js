var cov_17l30arp4u=function(){var path='/home/bwilbur/projects/mercury/modules/auth/controllers/permission-controller.js',hash='163277f3b6ed811569d2ff834dbb6fe2941b55b6',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/auth/controllers/permission-controller.js',statementMap:{'0':{start:{line:1,column:22},end:{line:1,column:59}},'1':{start:{line:2,column:17},end:{line:2,column:59}},'2':{start:{line:3,column:16},end:{line:3,column:47}},'3':{start:{line:4,column:20},end:{line:4,column:55}},'4':{start:{line:5,column:22},end:{line:5,column:59}},'5':{start:{line:6,column:15},end:{line:6,column:59}},'6':{start:{line:12,column:24},end:{line:12,column:43}},'7':{start:{line:13,column:2},end:{line:18,column:5}},'8':{start:{line:14,column:3},end:{line:14,column:65}},'9':{start:{line:16,column:3},end:{line:16,column:24}},'10':{start:{line:17,column:3},end:{line:17,column:62}},'11':{start:{line:23,column:17},end:{line:23,column:40}},'12':{start:{line:24,column:23},end:{line:24,column:52}},'13':{start:{line:25,column:2},end:{line:32,column:3}},'14':{start:{line:27,column:3},end:{line:27,column:59}},'15':{start:{line:29,column:7},end:{line:32,column:3}},'16':{start:{line:31,column:3},end:{line:31,column:65}},'17':{start:{line:34,column:18},end:{line:34,column:31}},'18':{start:{line:35,column:2},end:{line:40,column:5}},'19':{start:{line:36,column:3},end:{line:36,column:69}},'20':{start:{line:38,column:3},end:{line:38,column:24}},'21':{start:{line:39,column:3},end:{line:39,column:62}},'22':{start:{line:45,column:17},end:{line:45,column:41}},'23':{start:{line:46,column:23},end:{line:46,column:53}},'24':{start:{line:47,column:2},end:{line:54,column:3}},'25':{start:{line:49,column:3},end:{line:49,column:59}},'26':{start:{line:51,column:7},end:{line:54,column:3}},'27':{start:{line:53,column:3},end:{line:53,column:65}},'28':{start:{line:56,column:18},end:{line:56,column:31}},'29':{start:{line:57,column:2},end:{line:62,column:5}},'30':{start:{line:58,column:3},end:{line:58,column:71}},'31':{start:{line:60,column:3},end:{line:60,column:24}},'32':{start:{line:61,column:3},end:{line:61,column:62}},'33':{start:{line:67,column:22},end:{line:67,column:39}},'34':{start:{line:68,column:24},end:{line:68,column:43}},'35':{start:{line:70,column:16},end:{line:70,column:54}},'36':{start:{line:71,column:17},end:{line:71,column:54}},'37':{start:{line:72,column:21},end:{line:72,column:41}},'38':{start:{line:73,column:2},end:{line:80,column:3}},'39':{start:{line:75,column:3},end:{line:75,column:44}},'40':{start:{line:77,column:7},end:{line:80,column:3}},'41':{start:{line:79,column:3},end:{line:79,column:62}},'42':{start:{line:82,column:24},end:{line:82,column:43}},'43':{start:{line:83,column:2},end:{line:88,column:5}},'44':{start:{line:84,column:3},end:{line:84,column:62}},'45':{start:{line:86,column:3},end:{line:86,column:24}},'46':{start:{line:87,column:3},end:{line:87,column:62}},'47':{start:{line:92,column:0},end:{line:92,column:38}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:10,column:1},end:{line:10,column:2}},loc:{start:{line:11,column:1},end:{line:19,column:2}},line:11},'1':{name:'(anonymous_1)',decl:{start:{line:13,column:31},end:{line:13,column:32}},loc:{start:{line:13,column:46},end:{line:15,column:3}},line:13},'2':{name:'(anonymous_2)',decl:{start:{line:15,column:11},end:{line:15,column:12}},loc:{start:{line:15,column:20},end:{line:18,column:3}},line:15},'3':{name:'(anonymous_3)',decl:{start:{line:21,column:1},end:{line:21,column:2}},loc:{start:{line:22,column:1},end:{line:41,column:2}},line:22},'4':{name:'(anonymous_4)',decl:{start:{line:35,column:54},end:{line:35,column:55}},loc:{start:{line:35,column:60},end:{line:37,column:3}},line:35},'5':{name:'(anonymous_5)',decl:{start:{line:37,column:11},end:{line:37,column:12}},loc:{start:{line:37,column:20},end:{line:40,column:3}},line:37},'6':{name:'(anonymous_6)',decl:{start:{line:43,column:1},end:{line:43,column:2}},loc:{start:{line:44,column:1},end:{line:63,column:2}},line:44},'7':{name:'(anonymous_7)',decl:{start:{line:57,column:56},end:{line:57,column:57}},loc:{start:{line:57,column:62},end:{line:59,column:3}},line:57},'8':{name:'(anonymous_8)',decl:{start:{line:59,column:11},end:{line:59,column:12}},loc:{start:{line:59,column:20},end:{line:62,column:3}},line:59},'9':{name:'(anonymous_9)',decl:{start:{line:65,column:1},end:{line:65,column:2}},loc:{start:{line:66,column:1},end:{line:89,column:2}},line:66},'10':{name:'(anonymous_10)',decl:{start:{line:83,column:55},end:{line:83,column:56}},loc:{start:{line:83,column:65},end:{line:85,column:3}},line:83},'11':{name:'(anonymous_11)',decl:{start:{line:85,column:11},end:{line:85,column:12}},loc:{start:{line:85,column:20},end:{line:88,column:3}},line:85}},branchMap:{'0':{loc:{start:{line:23,column:17},end:{line:23,column:40}},type:'binary-expr',locations:[{start:{line:23,column:17},end:{line:23,column:32}},{start:{line:23,column:36},end:{line:23,column:40}}],line:23},'1':{loc:{start:{line:24,column:23},end:{line:24,column:52}},type:'binary-expr',locations:[{start:{line:24,column:23},end:{line:24,column:44}},{start:{line:24,column:48},end:{line:24,column:52}}],line:24},'2':{loc:{start:{line:25,column:2},end:{line:32,column:3}},type:'if',locations:[{start:{line:25,column:2},end:{line:32,column:3}},{start:{line:25,column:2},end:{line:32,column:3}}],line:25},'3':{loc:{start:{line:29,column:7},end:{line:32,column:3}},type:'if',locations:[{start:{line:29,column:7},end:{line:32,column:3}},{start:{line:29,column:7},end:{line:32,column:3}}],line:29},'4':{loc:{start:{line:45,column:17},end:{line:45,column:41}},type:'binary-expr',locations:[{start:{line:45,column:17},end:{line:45,column:33}},{start:{line:45,column:37},end:{line:45,column:41}}],line:45},'5':{loc:{start:{line:46,column:23},end:{line:46,column:53}},type:'binary-expr',locations:[{start:{line:46,column:23},end:{line:46,column:45}},{start:{line:46,column:49},end:{line:46,column:53}}],line:46},'6':{loc:{start:{line:47,column:2},end:{line:54,column:3}},type:'if',locations:[{start:{line:47,column:2},end:{line:54,column:3}},{start:{line:47,column:2},end:{line:54,column:3}}],line:47},'7':{loc:{start:{line:51,column:7},end:{line:54,column:3}},type:'if',locations:[{start:{line:51,column:7},end:{line:54,column:3}},{start:{line:51,column:7},end:{line:54,column:3}}],line:51},'8':{loc:{start:{line:73,column:2},end:{line:80,column:3}},type:'if',locations:[{start:{line:73,column:2},end:{line:80,column:3}},{start:{line:73,column:2},end:{line:80,column:3}}],line:73},'9':{loc:{start:{line:77,column:7},end:{line:80,column:3}},type:'if',locations:[{start:{line:77,column:7},end:{line:80,column:3}},{start:{line:77,column:7},end:{line:80,column:3}}],line:77}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const PermissionDao=(cov_17l30arp4u.s[0]++,require('./../models/permission-dao'));const Response=(cov_17l30arp4u.s[1]++,require('./../../utility/models/response'));const RoleDao=(cov_17l30arp4u.s[2]++,require('./../models/role-dao'));const TokenParser=(cov_17l30arp4u.s[3]++,require('./../models/token-parser'));const TokenVerifier=(cov_17l30arp4u.s[4]++,require('./../models/token-verifier'));const config=(cov_17l30arp4u.s[5]++,require('./../../../config/config').instance);class PermissionController{loadAll(req,res){cov_17l30arp4u.f[0]++;const permissionDao=(cov_17l30arp4u.s[6]++,new PermissionDao());cov_17l30arp4u.s[7]++;permissionDao.loadAll().then(permissions=>{cov_17l30arp4u.f[1]++;cov_17l30arp4u.s[8]++;return new Response(res,200,'',{permissions:permissions});}).catch(error=>{cov_17l30arp4u.f[2]++;cov_17l30arp4u.s[9]++;console.error(error);cov_17l30arp4u.s[10]++;return new Response(res,500,config.app.messages.default);});}assignPermission(req,res){cov_17l30arp4u.f[3]++;const roleId=(cov_17l30arp4u.s[11]++,(cov_17l30arp4u.b[0][0]++,req.body.roleId)||(cov_17l30arp4u.b[0][1]++,null));const permissionId=(cov_17l30arp4u.s[12]++,(cov_17l30arp4u.b[1][0]++,req.body.permissionId)||(cov_17l30arp4u.b[1][1]++,null));cov_17l30arp4u.s[13]++;if(!roleId){cov_17l30arp4u.b[2][0]++;cov_17l30arp4u.s[14]++;return new Response(res,400,'Must provide a role ID');}else{cov_17l30arp4u.b[2][1]++;cov_17l30arp4u.s[15]++;if(!permissionId){cov_17l30arp4u.b[3][0]++;cov_17l30arp4u.s[16]++;return new Response(res,400,'Must provide a permission ID');}else{cov_17l30arp4u.b[3][1]++;}}const roleDao=(cov_17l30arp4u.s[17]++,new RoleDao());cov_17l30arp4u.s[18]++;roleDao.assignPermission(roleId,permissionId).then(()=>{cov_17l30arp4u.f[4]++;cov_17l30arp4u.s[19]++;return new Response(res,200,'Permission assigned successfully');}).catch(error=>{cov_17l30arp4u.f[5]++;cov_17l30arp4u.s[20]++;console.error(error);cov_17l30arp4u.s[21]++;return new Response(res,500,config.app.messages.default);});}unassignPermission(req,res){cov_17l30arp4u.f[6]++;const roleId=(cov_17l30arp4u.s[22]++,(cov_17l30arp4u.b[4][0]++,req.query.roleId)||(cov_17l30arp4u.b[4][1]++,null));const permissionId=(cov_17l30arp4u.s[23]++,(cov_17l30arp4u.b[5][0]++,req.query.permissionId)||(cov_17l30arp4u.b[5][1]++,null));cov_17l30arp4u.s[24]++;if(!roleId){cov_17l30arp4u.b[6][0]++;cov_17l30arp4u.s[25]++;return new Response(res,400,'Must provide a role ID');}else{cov_17l30arp4u.b[6][1]++;cov_17l30arp4u.s[26]++;if(!permissionId){cov_17l30arp4u.b[7][0]++;cov_17l30arp4u.s[27]++;return new Response(res,400,'Must provide a permission ID');}else{cov_17l30arp4u.b[7][1]++;}}const roleDao=(cov_17l30arp4u.s[28]++,new RoleDao());cov_17l30arp4u.s[29]++;roleDao.unassignPermission(roleId,permissionId).then(()=>{cov_17l30arp4u.f[7]++;cov_17l30arp4u.s[30]++;return new Response(res,200,'Permission unassigned successfully');}).catch(error=>{cov_17l30arp4u.f[8]++;cov_17l30arp4u.s[31]++;console.error(error);cov_17l30arp4u.s[32]++;return new Response(res,500,config.app.messages.default);});}hasPermission(req,res){cov_17l30arp4u.f[9]++;const tokenParser=(cov_17l30arp4u.s[33]++,new TokenParser());const tokenVerifier=(cov_17l30arp4u.s[34]++,new TokenVerifier());const token=(cov_17l30arp4u.s[35]++,tokenVerifier.getTokenFromRequest(req));const userId=(cov_17l30arp4u.s[36]++,tokenParser.getUserIdFromToken(token));const permission=(cov_17l30arp4u.s[37]++,req.query.permission);cov_17l30arp4u.s[38]++;if(!userId){cov_17l30arp4u.b[8][0]++;cov_17l30arp4u.s[39]++;return new Response(res,400,'',false);}else{cov_17l30arp4u.b[8][1]++;cov_17l30arp4u.s[40]++;if(!permission){cov_17l30arp4u.b[9][0]++;cov_17l30arp4u.s[41]++;return new Response(res,400,'Must provide a permission');}else{cov_17l30arp4u.b[9][1]++;}}const permissionDao=(cov_17l30arp4u.s[42]++,new PermissionDao());cov_17l30arp4u.s[43]++;permissionDao.hasPermission(userId,permission).then(result=>{cov_17l30arp4u.f[10]++;cov_17l30arp4u.s[44]++;return new Response(res,200,'',{hasPermission:result});}).catch(error=>{cov_17l30arp4u.f[11]++;cov_17l30arp4u.s[45]++;console.error(error);cov_17l30arp4u.s[46]++;return new Response(res,500,config.app.messages.default);});}}cov_17l30arp4u.s[47]++;module.exports=PermissionController;