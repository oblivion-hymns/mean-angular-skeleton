var cov_10hs4no7eo=function(){var path='/home/bwilbur/projects/mercury/modules/building-agency/models/building-agency.js',hash='64f992bd2f81bc3f40159771500fa89a85a17b8d',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/building-agency/models/building-agency.js',statementMap:{'0':{start:{line:1,column:17},end:{line:1,column:36}},'1':{start:{line:2,column:17},end:{line:2,column:47}},'2':{start:{line:4,column:20},end:{line:7,column:16}},'3':{start:{line:9,column:23},end:{line:12,column:16}},'4':{start:{line:14,column:22},end:{line:17,column:16}},'5':{start:{line:19,column:15},end:{line:26,column:2}},'6':{start:{line:28,column:0},end:{line:28,column:58}}},fnMap:{},branchMap:{},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0},f:{},b:{},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const mongoose=(cov_10hs4no7eo.s[0]++,require('mongoose'));const ObjectId=(cov_10hs4no7eo.s[1]++,mongoose.Schema.Types.ObjectId);const fieldSchema=(cov_10hs4no7eo.s[2]++,new mongoose.Schema({fieldId:{type:String,required:true},value:{type:mongoose.Schema.Types.Mixed}},{_id:false}));const incidentSchema=(cov_10hs4no7eo.s[3]++,new mongoose.Schema({incidentId:{type:String,required:true},fields:[fieldSchema]},{_id:false}));const contactSchema=(cov_10hs4no7eo.s[4]++,new mongoose.Schema({contact:{type:ObjectId,ref:'Contact',required:true},contactGroup:{type:ObjectId,ref:'ContactGroup',required:true}},{_id:false}));const schema=(cov_10hs4no7eo.s[5]++,new mongoose.Schema({buildingId:{type:String,required:true},agencyId:{type:String,required:true},health:{type:Number,min:0.0,max:1.0,required:true,default:0.0},incidents:[incidentSchema],reps:[{type:ObjectId,ref:'User'}],contacts:[contactSchema]}));cov_10hs4no7eo.s[6]++;module.exports=mongoose.model('BuildingAgency',schema);