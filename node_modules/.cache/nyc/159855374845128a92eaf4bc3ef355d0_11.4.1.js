var cov_23pi67rlba=function(){var path='/home/bwilbur/projects/mercury/modules/auth/controllers/role-controller.js',hash='41bc620b7f08282be18065a5926c263f77c9b2d6',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/auth/controllers/role-controller.js',statementMap:{'0':{start:{line:1,column:17},end:{line:1,column:59}},'1':{start:{line:2,column:16},end:{line:2,column:47}},'2':{start:{line:3,column:15},end:{line:3,column:59}},'3':{start:{line:9,column:18},end:{line:9,column:31}},'4':{start:{line:10,column:2},end:{line:15,column:5}},'5':{start:{line:11,column:3},end:{line:11,column:53}},'6':{start:{line:13,column:3},end:{line:13,column:24}},'7':{start:{line:14,column:3},end:{line:14,column:62}},'8':{start:{line:20,column:23},end:{line:20,column:46}},'9':{start:{line:21,column:23},end:{line:21,column:46}},'10':{start:{line:22,column:2},end:{line:29,column:3}},'11':{start:{line:24,column:3},end:{line:24,column:59}},'12':{start:{line:26,column:7},end:{line:29,column:3}},'13':{start:{line:28,column:3},end:{line:28,column:56}},'14':{start:{line:31,column:18},end:{line:31,column:31}},'15':{start:{line:32,column:2},end:{line:37,column:5}},'16':{start:{line:33,column:3},end:{line:33,column:63}},'17':{start:{line:35,column:3},end:{line:35,column:24}},'18':{start:{line:36,column:3},end:{line:36,column:62}},'19':{start:{line:42,column:23},end:{line:42,column:47}},'20':{start:{line:43,column:23},end:{line:43,column:47}},'21':{start:{line:44,column:2},end:{line:51,column:3}},'22':{start:{line:46,column:3},end:{line:46,column:59}},'23':{start:{line:48,column:7},end:{line:51,column:3}},'24':{start:{line:50,column:3},end:{line:50,column:56}},'25':{start:{line:53,column:18},end:{line:53,column:31}},'26':{start:{line:54,column:2},end:{line:69,column:5}},'27':{start:{line:55,column:3},end:{line:62,column:4}},'28':{start:{line:57,column:4},end:{line:57,column:57}},'29':{start:{line:61,column:4},end:{line:61,column:60}},'30':{start:{line:65,column:3},end:{line:65,column:65}},'31':{start:{line:67,column:3},end:{line:67,column:24}},'32':{start:{line:68,column:3},end:{line:68,column:62}},'33':{start:{line:73,column:0},end:{line:73,column:32}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:7,column:1},end:{line:7,column:2}},loc:{start:{line:8,column:1},end:{line:16,column:2}},line:8},'1':{name:'(anonymous_1)',decl:{start:{line:10,column:25},end:{line:10,column:26}},loc:{start:{line:10,column:34},end:{line:12,column:3}},line:10},'2':{name:'(anonymous_2)',decl:{start:{line:12,column:11},end:{line:12,column:12}},loc:{start:{line:12,column:20},end:{line:15,column:3}},line:12},'3':{name:'(anonymous_3)',decl:{start:{line:18,column:1},end:{line:18,column:2}},loc:{start:{line:19,column:1},end:{line:38,column:2}},line:19},'4':{name:'(anonymous_4)',decl:{start:{line:32,column:54},end:{line:32,column:55}},loc:{start:{line:32,column:60},end:{line:34,column:3}},line:32},'5':{name:'(anonymous_5)',decl:{start:{line:34,column:11},end:{line:34,column:12}},loc:{start:{line:34,column:20},end:{line:37,column:3}},line:34},'6':{name:'(anonymous_6)',decl:{start:{line:40,column:1},end:{line:40,column:2}},loc:{start:{line:41,column:1},end:{line:70,column:2}},line:41},'7':{name:'(anonymous_7)',decl:{start:{line:54,column:37},end:{line:54,column:38}},loc:{start:{line:54,column:45},end:{line:64,column:3}},line:54},'8':{name:'(anonymous_8)',decl:{start:{line:64,column:10},end:{line:64,column:11}},loc:{start:{line:64,column:16},end:{line:66,column:3}},line:64},'9':{name:'(anonymous_9)',decl:{start:{line:66,column:11},end:{line:66,column:12}},loc:{start:{line:66,column:20},end:{line:69,column:3}},line:66}},branchMap:{'0':{loc:{start:{line:20,column:23},end:{line:20,column:46}},type:'binary-expr',locations:[{start:{line:20,column:23},end:{line:20,column:38}},{start:{line:20,column:42},end:{line:20,column:46}}],line:20},'1':{loc:{start:{line:21,column:23},end:{line:21,column:46}},type:'binary-expr',locations:[{start:{line:21,column:23},end:{line:21,column:38}},{start:{line:21,column:42},end:{line:21,column:46}}],line:21},'2':{loc:{start:{line:22,column:2},end:{line:29,column:3}},type:'if',locations:[{start:{line:22,column:2},end:{line:29,column:3}},{start:{line:22,column:2},end:{line:29,column:3}}],line:22},'3':{loc:{start:{line:26,column:7},end:{line:29,column:3}},type:'if',locations:[{start:{line:26,column:7},end:{line:29,column:3}},{start:{line:26,column:7},end:{line:29,column:3}}],line:26},'4':{loc:{start:{line:42,column:23},end:{line:42,column:47}},type:'binary-expr',locations:[{start:{line:42,column:23},end:{line:42,column:39}},{start:{line:42,column:43},end:{line:42,column:47}}],line:42},'5':{loc:{start:{line:43,column:23},end:{line:43,column:47}},type:'binary-expr',locations:[{start:{line:43,column:23},end:{line:43,column:39}},{start:{line:43,column:43},end:{line:43,column:47}}],line:43},'6':{loc:{start:{line:44,column:2},end:{line:51,column:3}},type:'if',locations:[{start:{line:44,column:2},end:{line:51,column:3}},{start:{line:44,column:2},end:{line:51,column:3}}],line:44},'7':{loc:{start:{line:48,column:7},end:{line:51,column:3}},type:'if',locations:[{start:{line:48,column:7},end:{line:51,column:3}},{start:{line:48,column:7},end:{line:51,column:3}}],line:48},'8':{loc:{start:{line:55,column:3},end:{line:62,column:4}},type:'if',locations:[{start:{line:55,column:3},end:{line:62,column:4}},{start:{line:55,column:3},end:{line:62,column:4}}],line:55},'9':{loc:{start:{line:55,column:7},end:{line:55,column:33}},type:'binary-expr',locations:[{start:{line:55,column:7},end:{line:55,column:12}},{start:{line:55,column:16},end:{line:55,column:33}}],line:55}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Response=(cov_23pi67rlba.s[0]++,require('./../../utility/models/response'));const RoleDao=(cov_23pi67rlba.s[1]++,require('./../models/role-dao'));const config=(cov_23pi67rlba.s[2]++,require('./../../../config/config').instance);class RoleController{loadAll(req,res){cov_23pi67rlba.f[0]++;const roleDao=(cov_23pi67rlba.s[3]++,new RoleDao());cov_23pi67rlba.s[4]++;roleDao.loadAll().then(roles=>{cov_23pi67rlba.f[1]++;cov_23pi67rlba.s[5]++;return new Response(res,200,'',{roles:roles});}).catch(error=>{cov_23pi67rlba.f[2]++;cov_23pi67rlba.s[6]++;console.error(error);cov_23pi67rlba.s[7]++;return new Response(res,500,config.app.messages.default);});}assignRole(req,res){cov_23pi67rlba.f[3]++;const userToAssign=(cov_23pi67rlba.s[8]++,(cov_23pi67rlba.b[0][0]++,req.body.userId)||(cov_23pi67rlba.b[0][1]++,null));const roleToAssign=(cov_23pi67rlba.s[9]++,(cov_23pi67rlba.b[1][0]++,req.body.roleId)||(cov_23pi67rlba.b[1][1]++,null));cov_23pi67rlba.s[10]++;if(!userToAssign){cov_23pi67rlba.b[2][0]++;cov_23pi67rlba.s[11]++;return new Response(res,400,'Must provide a user ID');}else{cov_23pi67rlba.b[2][1]++;cov_23pi67rlba.s[12]++;if(!roleToAssign){cov_23pi67rlba.b[3][0]++;cov_23pi67rlba.s[13]++;return new Response(res,400,'Must provide a role');}else{cov_23pi67rlba.b[3][1]++;}}const roleDao=(cov_23pi67rlba.s[14]++,new RoleDao());cov_23pi67rlba.s[15]++;roleDao.assignRole(userToAssign,roleToAssign).then(()=>{cov_23pi67rlba.f[4]++;cov_23pi67rlba.s[16]++;return new Response(res,200,'Role assigned successfully');}).catch(error=>{cov_23pi67rlba.f[5]++;cov_23pi67rlba.s[17]++;console.error(error);cov_23pi67rlba.s[18]++;return new Response(res,500,config.app.messages.default);});}unassignRole(req,res){cov_23pi67rlba.f[6]++;const userToAssign=(cov_23pi67rlba.s[19]++,(cov_23pi67rlba.b[4][0]++,req.query.userId)||(cov_23pi67rlba.b[4][1]++,null));const roleToAssign=(cov_23pi67rlba.s[20]++,(cov_23pi67rlba.b[5][0]++,req.query.roleId)||(cov_23pi67rlba.b[5][1]++,null));cov_23pi67rlba.s[21]++;if(!userToAssign){cov_23pi67rlba.b[6][0]++;cov_23pi67rlba.s[22]++;return new Response(res,400,'Must provide a user ID');}else{cov_23pi67rlba.b[6][1]++;cov_23pi67rlba.s[23]++;if(!roleToAssign){cov_23pi67rlba.b[7][0]++;cov_23pi67rlba.s[24]++;return new Response(res,400,'Must provide a role');}else{cov_23pi67rlba.b[7][1]++;}}const roleDao=(cov_23pi67rlba.s[25]++,new RoleDao());cov_23pi67rlba.s[26]++;roleDao.loadOne(roleToAssign).then(role=>{cov_23pi67rlba.f[7]++;cov_23pi67rlba.s[27]++;if((cov_23pi67rlba.b[9][0]++,!role)||(cov_23pi67rlba.b[9][1]++,!role.isRemovable)){cov_23pi67rlba.b[8][0]++;cov_23pi67rlba.s[28]++;throw'This role does not exist or is not removable';}else{cov_23pi67rlba.b[8][1]++;cov_23pi67rlba.s[29]++;return roleDao.unassignRole(userToAssign,roleToAssign);}}).then(()=>{cov_23pi67rlba.f[8]++;cov_23pi67rlba.s[30]++;return new Response(res,200,'Role unassigned successfully');}).catch(error=>{cov_23pi67rlba.f[9]++;cov_23pi67rlba.s[31]++;console.error(error);cov_23pi67rlba.s[32]++;return new Response(res,500,config.app.messages.default);});}}cov_23pi67rlba.s[33]++;module.exports=RoleController;