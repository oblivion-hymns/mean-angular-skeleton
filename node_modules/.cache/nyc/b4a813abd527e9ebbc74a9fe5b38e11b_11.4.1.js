var cov_23q0cz045t=function(){var path='/home/bwilbur/projects/mercury/modules/communication/models/mail/mail-dispatcher.js',hash='65df2b20c4a2b728f8b5a015bf5bbf9a383b87cf',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/communication/models/mail/mail-dispatcher.js',statementMap:{'0':{start:{line:1,column:19},end:{line:1,column:40}},'1':{start:{line:2,column:23},end:{line:2,column:59}},'2':{start:{line:3,column:15},end:{line:3,column:62}},'3':{start:{line:4,column:23},end:{line:4,column:51}},'4':{start:{line:21,column:2},end:{line:24,column:3}},'5':{start:{line:23,column:3},end:{line:23,column:30}},'6':{start:{line:26,column:2},end:{line:29,column:3}},'7':{start:{line:28,column:3},end:{line:28,column:51}},'8':{start:{line:31,column:25},end:{line:31,column:45}},'9':{start:{line:32,column:2},end:{line:36,column:5}},'10':{start:{line:33,column:3},end:{line:33,column:46}},'11':{start:{line:35,column:3},end:{line:35,column:24}},'12':{start:{line:49,column:2},end:{line:52,column:3}},'13':{start:{line:51,column:3},end:{line:51,column:100}},'14':{start:{line:54,column:2},end:{line:54,column:16}},'15':{start:{line:55,column:2},end:{line:55,column:16}},'16':{start:{line:56,column:2},end:{line:56,column:18}},'17':{start:{line:58,column:2},end:{line:61,column:3}},'18':{start:{line:60,column:3},end:{line:60,column:61}},'19':{start:{line:63,column:2},end:{line:66,column:3}},'20':{start:{line:65,column:3},end:{line:65,column:28}},'21':{start:{line:69,column:2},end:{line:72,column:3}},'22':{start:{line:71,column:3},end:{line:71,column:45}},'23':{start:{line:74,column:2},end:{line:77,column:3}},'24':{start:{line:76,column:3},end:{line:76,column:22}},'25':{start:{line:80,column:2},end:{line:83,column:3}},'26':{start:{line:82,column:3},end:{line:82,column:42}},'27':{start:{line:85,column:15},end:{line:85,column:38}},'28':{start:{line:86,column:19},end:{line:86,column:39}},'29':{start:{line:87,column:2},end:{line:92,column:3}},'30':{start:{line:89,column:3},end:{line:89,column:35}},'31':{start:{line:90,column:3},end:{line:90,column:11}},'32':{start:{line:91,column:3},end:{line:91,column:12}},'33':{start:{line:94,column:21},end:{line:94,column:37}},'34':{start:{line:95,column:22},end:{line:95,column:76}},'35':{start:{line:96,column:22},end:{line:103,column:3}},'36':{start:{line:104,column:2},end:{line:109,column:5}},'37':{start:{line:105,column:3},end:{line:108,column:4}},'38':{start:{line:107,column:4},end:{line:107,column:25}},'39':{start:{line:113,column:0},end:{line:113,column:32}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:19,column:1},end:{line:19,column:2}},loc:{start:{line:20,column:1},end:{line:37,column:2}},line:20},'1':{name:'(anonymous_1)',decl:{start:{line:32,column:44},end:{line:32,column:45}},loc:{start:{line:32,column:52},end:{line:34,column:3}},line:32},'2':{name:'(anonymous_2)',decl:{start:{line:34,column:11},end:{line:34,column:12}},loc:{start:{line:34,column:20},end:{line:36,column:3}},line:34},'3':{name:'(anonymous_3)',decl:{start:{line:47,column:1},end:{line:47,column:2}},loc:{start:{line:48,column:1},end:{line:110,column:2}},line:48},'4':{name:'(anonymous_4)',decl:{start:{line:104,column:36},end:{line:104,column:37}},loc:{start:{line:104,column:45},end:{line:109,column:3}},line:104}},branchMap:{'0':{loc:{start:{line:21,column:2},end:{line:24,column:3}},type:'if',locations:[{start:{line:21,column:2},end:{line:24,column:3}},{start:{line:21,column:2},end:{line:24,column:3}}],line:21},'1':{loc:{start:{line:26,column:2},end:{line:29,column:3}},type:'if',locations:[{start:{line:26,column:2},end:{line:29,column:3}},{start:{line:26,column:2},end:{line:29,column:3}}],line:26},'2':{loc:{start:{line:49,column:2},end:{line:52,column:3}},type:'if',locations:[{start:{line:49,column:2},end:{line:52,column:3}},{start:{line:49,column:2},end:{line:52,column:3}}],line:49},'3':{loc:{start:{line:54,column:7},end:{line:54,column:15}},type:'binary-expr',locations:[{start:{line:54,column:7},end:{line:54,column:9}},{start:{line:54,column:13},end:{line:54,column:15}}],line:54},'4':{loc:{start:{line:55,column:7},end:{line:55,column:15}},type:'binary-expr',locations:[{start:{line:55,column:7},end:{line:55,column:9}},{start:{line:55,column:13},end:{line:55,column:15}}],line:55},'5':{loc:{start:{line:56,column:8},end:{line:56,column:17}},type:'binary-expr',locations:[{start:{line:56,column:8},end:{line:56,column:11}},{start:{line:56,column:15},end:{line:56,column:17}}],line:56},'6':{loc:{start:{line:58,column:2},end:{line:61,column:3}},type:'if',locations:[{start:{line:58,column:2},end:{line:61,column:3}},{start:{line:58,column:2},end:{line:61,column:3}}],line:58},'7':{loc:{start:{line:63,column:2},end:{line:66,column:3}},type:'if',locations:[{start:{line:63,column:2},end:{line:66,column:3}},{start:{line:63,column:2},end:{line:66,column:3}}],line:63},'8':{loc:{start:{line:69,column:2},end:{line:72,column:3}},type:'if',locations:[{start:{line:69,column:2},end:{line:72,column:3}},{start:{line:69,column:2},end:{line:72,column:3}}],line:69},'9':{loc:{start:{line:74,column:2},end:{line:77,column:3}},type:'if',locations:[{start:{line:74,column:2},end:{line:77,column:3}},{start:{line:74,column:2},end:{line:77,column:3}}],line:74},'10':{loc:{start:{line:80,column:2},end:{line:83,column:3}},type:'if',locations:[{start:{line:80,column:2},end:{line:83,column:3}},{start:{line:80,column:2},end:{line:83,column:3}}],line:80},'11':{loc:{start:{line:87,column:2},end:{line:92,column:3}},type:'if',locations:[{start:{line:87,column:2},end:{line:92,column:3}},{start:{line:87,column:2},end:{line:92,column:3}}],line:87},'12':{loc:{start:{line:105,column:3},end:{line:108,column:4}},type:'if',locations:[{start:{line:105,column:3},end:{line:108,column:4}},{start:{line:105,column:3},end:{line:108,column:4}}],line:105}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0],'9':[0,0],'10':[0,0],'11':[0,0],'12':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const nodemailer=(cov_23q0cz045t.s[0]++,require('nodemailer'));const nodemailerSmtp=(cov_23q0cz045t.s[1]++,require('nodemailer-smtp-transport'));const config=(cov_23q0cz045t.s[2]++,require('./../../../../config/config').instance);const TemplateParser=(cov_23q0cz045t.s[3]++,require('./template-parser'));class MailDispatcher{/**
	 * Sends an e-mail using a predefined template
	 * @param string[] to - An array of emails to send the message to
	 * @param string subject
	 * @param string body
	 * @param string templateName - Name of the html template. Will be resolved to a template path
	 * @param any args - Key/value arguments to be passed to the template
	 * @param string[] cc - Optional. An array of emails to copy the message to
	 * @param string bcc - Optional. An array of emails to blind copy the message to
	 * @return Promise
	 */sendEmailWithTemplate(to,subject,template,args,cc,bcc){cov_23q0cz045t.f[0]++;cov_23q0cz045t.s[4]++;if(template){cov_23q0cz045t.b[0][0]++;cov_23q0cz045t.s[5]++;template=template.trim();}else{cov_23q0cz045t.b[0][1]++;}cov_23q0cz045t.s[6]++;if(!template){cov_23q0cz045t.b[1][0]++;cov_23q0cz045t.s[7]++;throw new Error('Must include a template path');}else{cov_23q0cz045t.b[1][1]++;}const templateParser=(cov_23q0cz045t.s[8]++,new TemplateParser());cov_23q0cz045t.s[9]++;templateParser.parse(template,args).then(html=>{cov_23q0cz045t.f[1]++;cov_23q0cz045t.s[10]++;this.sendEmail(to,subject,html,cc,bcc);}).catch(error=>{cov_23q0cz045t.f[2]++;cov_23q0cz045t.s[11]++;console.error(error);});}/**
	 * Sends an e-mail
	 * @param string[] to - An array of emails to send the message to
	 * @param string subject
	 * @param string body
	 * @param string[] cc - Optional. An array of emails to copy the message to
	 * @param string bcc - Optional. An array of emails to blind copy the message to
	 */sendEmail(to,subject,body,cc,bcc){cov_23q0cz045t.f[3]++;cov_23q0cz045t.s[12]++;if(!config.mail.enabled){cov_23q0cz045t.b[2][0]++;cov_23q0cz045t.s[13]++;throw new Error('E-mail is currently disabled. Enable e-mail in the config to call this method');}else{cov_23q0cz045t.b[2][1]++;}cov_23q0cz045t.s[14]++;to=(cov_23q0cz045t.b[3][0]++,to)||(cov_23q0cz045t.b[3][1]++,[]);cov_23q0cz045t.s[15]++;cc=(cov_23q0cz045t.b[4][0]++,cc)||(cov_23q0cz045t.b[4][1]++,[]);cov_23q0cz045t.s[16]++;bcc=(cov_23q0cz045t.b[5][0]++,bcc)||(cov_23q0cz045t.b[5][1]++,[]);cov_23q0cz045t.s[17]++;if(to.length==0){cov_23q0cz045t.b[6][0]++;cov_23q0cz045t.s[18]++;throw new Error('Must include at least one "to" address');}else{cov_23q0cz045t.b[6][1]++;}cov_23q0cz045t.s[19]++;if(subject){cov_23q0cz045t.b[7][0]++;cov_23q0cz045t.s[20]++;subject=subject.trim();}else{cov_23q0cz045t.b[7][1]++;}//Separate blocks to check after the trim if a string exists
cov_23q0cz045t.s[21]++;if(!subject){cov_23q0cz045t.b[8][0]++;cov_23q0cz045t.s[22]++;throw new Error('Must include a subject');}else{cov_23q0cz045t.b[8][1]++;}cov_23q0cz045t.s[23]++;if(body){cov_23q0cz045t.b[9][0]++;cov_23q0cz045t.s[24]++;body=body.trim();}else{cov_23q0cz045t.b[9][1]++;}//Separate blocks to check after the trim if a string exists
cov_23q0cz045t.s[25]++;if(!body){cov_23q0cz045t.b[10][0]++;cov_23q0cz045t.s[26]++;throw new Error('Must include a body');}else{cov_23q0cz045t.b[10][1]++;}const from=(cov_23q0cz045t.s[27]++,config.mail.defaultFrom);const redirect=(cov_23q0cz045t.s[28]++,config.mail.redirect);cov_23q0cz045t.s[29]++;if(redirect){cov_23q0cz045t.b[11][0]++;cov_23q0cz045t.s[30]++;to=config.mail.redirectEmails;cov_23q0cz045t.s[31]++;cc=[];cov_23q0cz045t.s[32]++;bcc=[];}else{cov_23q0cz045t.b[11][1]++;}const smtpConfig=(cov_23q0cz045t.s[33]++,config.mail.smtp);const transporter=(cov_23q0cz045t.s[34]++,nodemailer.createTransport(nodemailerSmtp(smtpConfig)));const mailOptions=(cov_23q0cz045t.s[35]++,{from:from,to:to.join(', '),cc:cc.join(', '),bcc:bcc.join(', '),subject:subject,html:body});cov_23q0cz045t.s[36]++;transporter.sendMail(mailOptions,error=>{cov_23q0cz045t.f[4]++;cov_23q0cz045t.s[37]++;if(error){cov_23q0cz045t.b[12][0]++;cov_23q0cz045t.s[38]++;console.error(error);}else{cov_23q0cz045t.b[12][1]++;}});}}cov_23q0cz045t.s[39]++;module.exports=MailDispatcher;