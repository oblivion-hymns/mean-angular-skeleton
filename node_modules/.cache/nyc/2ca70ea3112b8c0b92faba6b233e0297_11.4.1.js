var cov_8id7tnm49=function(){var path='/home/bwilbur/projects/mercury/modules/auth/controllers/auth-controller.js',hash='d834c56d1c44c18fd0a8c3b7fd6cd27083b0188f',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/auth/controllers/auth-controller.js',statementMap:{'0':{start:{line:1,column:15},end:{line:1,column:34}},'1':{start:{line:2,column:12},end:{line:2,column:35}},'2':{start:{line:3,column:17},end:{line:3,column:59}},'3':{start:{line:4,column:16},end:{line:4,column:55}},'4':{start:{line:5,column:15},end:{line:5,column:59}},'5':{start:{line:11,column:16},end:{line:11,column:30}},'6':{start:{line:12,column:19},end:{line:12,column:36}},'7':{start:{line:13,column:18},end:{line:13,column:31}},'8':{start:{line:15,column:2},end:{line:35,column:5}},'9':{start:{line:16,column:3},end:{line:19,column:4}},'10':{start:{line:18,column:4},end:{line:18,column:66}},'11':{start:{line:21,column:27},end:{line:21,column:70}},'12':{start:{line:22,column:3},end:{line:25,column:4}},'13':{start:{line:24,column:4},end:{line:24,column:66}},'14':{start:{line:27,column:20},end:{line:27,column:38}},'15':{start:{line:28,column:18},end:{line:28,column:26}},'16':{start:{line:29,column:19},end:{line:29,column:54}},'17':{start:{line:30,column:17},end:{line:30,column:52}},'18':{start:{line:31,column:3},end:{line:31,column:53}},'19':{start:{line:33,column:3},end:{line:33,column:24}},'20':{start:{line:34,column:3},end:{line:34,column:62}},'21':{start:{line:39,column:0},end:{line:39,column:32}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:9,column:1},end:{line:9,column:2}},loc:{start:{line:10,column:1},end:{line:36,column:2}},line:10},'1':{name:'(anonymous_1)',decl:{start:{line:15,column:34},end:{line:15,column:35}},loc:{start:{line:15,column:42},end:{line:32,column:3}},line:15},'2':{name:'(anonymous_2)',decl:{start:{line:32,column:11},end:{line:32,column:12}},loc:{start:{line:32,column:20},end:{line:35,column:3}},line:32}},branchMap:{'0':{loc:{start:{line:16,column:3},end:{line:19,column:4}},type:'if',locations:[{start:{line:16,column:3},end:{line:19,column:4}},{start:{line:16,column:3},end:{line:19,column:4}}],line:16},'1':{loc:{start:{line:22,column:3},end:{line:25,column:4}},type:'if',locations:[{start:{line:22,column:3},end:{line:25,column:4}},{start:{line:22,column:3},end:{line:25,column:4}}],line:22}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0},f:{'0':0,'1':0,'2':0},b:{'0':[0,0],'1':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const bcrypt=(cov_8id7tnm49.s[0]++,require('bcryptjs'));const jwt=(cov_8id7tnm49.s[1]++,require('jsonwebtoken'));const Response=(cov_8id7tnm49.s[2]++,require('./../../utility/models/response'));const UserDao=(cov_8id7tnm49.s[3]++,require('./../../user/models/user-dao'));const config=(cov_8id7tnm49.s[4]++,require('./../../../config/config').instance);class AuthController{login(req,res){cov_8id7tnm49.f[0]++;const email=(cov_8id7tnm49.s[5]++,req.body.email);const password=(cov_8id7tnm49.s[6]++,req.body.password);const userDao=(cov_8id7tnm49.s[7]++,new UserDao());cov_8id7tnm49.s[8]++;userDao.loadByEmail(email).then(user=>{cov_8id7tnm49.f[1]++;cov_8id7tnm49.s[9]++;if(!user){cov_8id7tnm49.b[0][0]++;cov_8id7tnm49.s[10]++;return new Response(res,400,'Invalid username or password');}else{cov_8id7tnm49.b[0][1]++;}const isPasswordValid=(cov_8id7tnm49.s[11]++,bcrypt.compareSync(password,user.password));cov_8id7tnm49.s[12]++;if(!isPasswordValid){cov_8id7tnm49.b[1][0]++;cov_8id7tnm49.s[13]++;return new Response(res,400,'Invalid username or password');}else{cov_8id7tnm49.b[1][1]++;}const userData=(cov_8id7tnm49.s[14]++,{userId:user._id});const secret=(cov_8id7tnm49.s[15]++,'secret');const options=(cov_8id7tnm49.s[16]++,{expiresIn:config.tokenExpiration});const token=(cov_8id7tnm49.s[17]++,jwt.sign(userData,secret,options));cov_8id7tnm49.s[18]++;return new Response(res,200,'',{token:token});}).catch(error=>{cov_8id7tnm49.f[2]++;cov_8id7tnm49.s[19]++;console.error(error);cov_8id7tnm49.s[20]++;return new Response(res,500,config.app.messages.default);});}}cov_8id7tnm49.s[21]++;module.exports=AuthController;