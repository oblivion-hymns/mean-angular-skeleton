var cov_1k6anovzkj=function(){var path="/home/bwilbur/projects/mercury/modules/utility/models/response.js",hash="2d526e31741816e34922792456b065a0ecea1261",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/bwilbur/projects/mercury/modules/utility/models/response.js",statementMap:{"0":{start:{line:14,column:2},end:{line:14,column:27}},"1":{start:{line:15,column:2},end:{line:15,column:31}},"2":{start:{line:16,column:2},end:{line:16,column:25}},"3":{start:{line:17,column:2},end:{line:17,column:25}},"4":{start:{line:19,column:2},end:{line:19,column:21}},"5":{start:{line:28,column:16},end:{line:28,column:28}},"6":{start:{line:29,column:17},end:{line:29,column:30}},"7":{start:{line:30,column:19},end:{line:30,column:34}},"8":{start:{line:32,column:13},end:{line:32,column:22}},"9":{start:{line:33,column:2},end:{line:36,column:3}},"10":{start:{line:35,column:3},end:{line:35,column:26}},"11":{start:{line:38,column:2},end:{line:38,column:48}},"12":{start:{line:42,column:0},end:{line:42,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:12,column:1},end:{line:12,column:2}},loc:{start:{line:13,column:1},end:{line:20,column:2}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:1},end:{line:26,column:2}},loc:{start:{line:27,column:1},end:{line:39,column:2}},line:27}},branchMap:{"0":{loc:{start:{line:17,column:14},end:{line:17,column:24}},type:"binary-expr",locations:[{start:{line:17,column:14},end:{line:17,column:18}},{start:{line:17,column:22},end:{line:17,column:24}}],line:17},"1":{loc:{start:{line:33,column:2},end:{line:36,column:3}},type:"if",locations:[{start:{line:33,column:2},end:{line:36,column:3}},{start:{line:33,column:2},end:{line:36,column:3}}],line:33}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();/**
 * Wrapper for response objects to help make code more concise
 */class Response{/**
	 * @param ServerResponse response - Original response object
	 * @param number statusCode - An HTTP status code
	 * @param string message
	 * @param any args - Optional. Arguments to include in the response
	 */constructor(response,statusCode,message,args){cov_1k6anovzkj.f[0]++;cov_1k6anovzkj.s[0]++;this.response=response;cov_1k6anovzkj.s[1]++;this.statusCode=statusCode;cov_1k6anovzkj.s[2]++;this.message=message;cov_1k6anovzkj.s[3]++;this.args=(cov_1k6anovzkj.b[0][0]++,args)||(cov_1k6anovzkj.b[0][1]++,{});cov_1k6anovzkj.s[4]++;return this.send();}/**
	 * Constructs & returns a ServerResponse object
	 * @return ServerResponse
	 */send(){cov_1k6anovzkj.f[1]++;var message=(cov_1k6anovzkj.s[5]++,this.message);var response=(cov_1k6anovzkj.s[6]++,this.response);var statusCode=(cov_1k6anovzkj.s[7]++,this.statusCode);var data=(cov_1k6anovzkj.s[8]++,this.args);cov_1k6anovzkj.s[9]++;if(message){cov_1k6anovzkj.b[1][0]++;cov_1k6anovzkj.s[10]++;data.message=message;}else{cov_1k6anovzkj.b[1][1]++;}cov_1k6anovzkj.s[11]++;return response.status(statusCode).json(data);}}cov_1k6anovzkj.s[12]++;module.exports=Response;