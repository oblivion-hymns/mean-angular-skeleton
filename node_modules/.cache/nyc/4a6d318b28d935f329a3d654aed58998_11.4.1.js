var cov_2eu06nzhgn=function(){var path='/home/bwilbur/projects/mercury/modules/auth/models/role-dao.js',hash='e0def99444f20e021abaa8bb6c2d0dc540f70a89',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/auth/models/role-dao.js',statementMap:{'0':{start:{line:1,column:17},end:{line:1,column:36}},'1':{start:{line:2,column:13},end:{line:2,column:30}},'2':{start:{line:3,column:13},end:{line:3,column:48}},'3':{start:{line:14,column:2},end:{line:14,column:64}},'4':{start:{line:24,column:2},end:{line:24,column:71}},'5':{start:{line:33,column:2},end:{line:33,column:33}},'6':{start:{line:41,column:2},end:{line:41,column:87}},'7':{start:{line:50,column:2},end:{line:50,column:67}},'8':{start:{line:60,column:2},end:{line:62,column:5}},'9':{start:{line:61,column:3},end:{line:61,column:39}},'10':{start:{line:73,column:13},end:{line:73,column:44}},'11':{start:{line:74,column:17},end:{line:74,column:45}},'12':{start:{line:75,column:18},end:{line:75,column:59}},'13':{start:{line:76,column:2},end:{line:76,column:17}},'14':{start:{line:87,column:13},end:{line:87,column:44}},'15':{start:{line:88,column:17},end:{line:88,column:41}},'16':{start:{line:89,column:18},end:{line:89,column:59}},'17':{start:{line:90,column:2},end:{line:90,column:17}},'18':{start:{line:101,column:23},end:{line:101,column:54}},'19':{start:{line:102,column:29},end:{line:102,column:66}},'20':{start:{line:103,column:17},end:{line:103,column:63}},'21':{start:{line:104,column:18},end:{line:104,column:69}},'22':{start:{line:105,column:2},end:{line:105,column:17}},'23':{start:{line:116,column:23},end:{line:116,column:54}},'24':{start:{line:117,column:29},end:{line:117,column:66}},'25':{start:{line:118,column:17},end:{line:118,column:59}},'26':{start:{line:119,column:18},end:{line:119,column:69}},'27':{start:{line:120,column:2},end:{line:120,column:17}},'28':{start:{line:131,column:2},end:{line:131,column:26}},'29':{start:{line:132,column:2},end:{line:132,column:30}},'30':{start:{line:134,column:18},end:{line:143,column:4}},'31':{start:{line:135,column:3},end:{line:138,column:4}},'32':{start:{line:137,column:4},end:{line:137,column:17}},'33':{start:{line:140,column:3},end:{line:140,column:58}},'34':{start:{line:142,column:3},end:{line:142,column:17}},'35':{start:{line:145,column:2},end:{line:145,column:17}},'36':{start:{line:149,column:0},end:{line:149,column:25}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:12,column:1},end:{line:12,column:2}},loc:{start:{line:13,column:1},end:{line:15,column:2}},line:13},'1':{name:'(anonymous_1)',decl:{start:{line:22,column:1},end:{line:22,column:2}},loc:{start:{line:23,column:1},end:{line:25,column:2}},line:23},'2':{name:'(anonymous_2)',decl:{start:{line:31,column:1},end:{line:31,column:2}},loc:{start:{line:32,column:1},end:{line:34,column:2}},line:32},'3':{name:'(anonymous_3)',decl:{start:{line:39,column:1},end:{line:39,column:2}},loc:{start:{line:40,column:1},end:{line:42,column:2}},line:40},'4':{name:'(anonymous_4)',decl:{start:{line:48,column:1},end:{line:48,column:2}},loc:{start:{line:49,column:1},end:{line:51,column:2}},line:49},'5':{name:'(anonymous_5)',decl:{start:{line:58,column:1},end:{line:58,column:2}},loc:{start:{line:59,column:1},end:{line:63,column:2}},line:59},'6':{name:'(anonymous_6)',decl:{start:{line:60,column:35},end:{line:60,column:36}},loc:{start:{line:60,column:43},end:{line:62,column:3}},line:60},'7':{name:'(anonymous_7)',decl:{start:{line:71,column:1},end:{line:71,column:2}},loc:{start:{line:72,column:1},end:{line:77,column:2}},line:72},'8':{name:'(anonymous_8)',decl:{start:{line:85,column:1},end:{line:85,column:2}},loc:{start:{line:86,column:1},end:{line:91,column:2}},line:86},'9':{name:'(anonymous_9)',decl:{start:{line:99,column:1},end:{line:99,column:2}},loc:{start:{line:100,column:1},end:{line:106,column:2}},line:100},'10':{name:'(anonymous_10)',decl:{start:{line:114,column:1},end:{line:114,column:2}},loc:{start:{line:115,column:1},end:{line:121,column:2}},line:115},'11':{name:'(anonymous_11)',decl:{start:{line:129,column:1},end:{line:129,column:2}},loc:{start:{line:130,column:1},end:{line:146,column:2}},line:130},'12':{name:'(anonymous_12)',decl:{start:{line:134,column:49},end:{line:134,column:50}},loc:{start:{line:134,column:57},end:{line:141,column:3}},line:134},'13':{name:'(anonymous_13)',decl:{start:{line:141,column:10},end:{line:141,column:11}},loc:{start:{line:141,column:18},end:{line:143,column:3}},line:141}},branchMap:{'0':{loc:{start:{line:61,column:10},end:{line:61,column:38}},type:'binary-expr',locations:[{start:{line:61,column:10},end:{line:61,column:29}},{start:{line:61,column:33},end:{line:61,column:38}}],line:61},'1':{loc:{start:{line:131,column:11},end:{line:131,column:25}},type:'binary-expr',locations:[{start:{line:131,column:11},end:{line:131,column:17}},{start:{line:131,column:21},end:{line:131,column:25}}],line:131},'2':{loc:{start:{line:132,column:13},end:{line:132,column:29}},type:'binary-expr',locations:[{start:{line:132,column:13},end:{line:132,column:21}},{start:{line:132,column:25},end:{line:132,column:29}}],line:132},'3':{loc:{start:{line:135,column:3},end:{line:138,column:4}},type:'if',locations:[{start:{line:135,column:3},end:{line:138,column:4}},{start:{line:135,column:3},end:{line:138,column:4}}],line:135}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const mongoose=(cov_2eu06nzhgn.s[0]++,require('mongoose'));const Role=(cov_2eu06nzhgn.s[1]++,require('./role'));const User=(cov_2eu06nzhgn.s[2]++,require('./../../user/models/user'));class RoleDao{/**
	 * Loads a single role by ID
	 * @param string id
	 * @return Promise
	 */loadOne(id){cov_2eu06nzhgn.f[0]++;cov_2eu06nzhgn.s[3]++;return Role.findOne({_id:id}).populate('permissions').exec();}/**
	 * Returns the role with the given name, if one exists
	 * @param string roleName
	 * @return Promise
	 */loadByName(roleName){cov_2eu06nzhgn.f[1]++;cov_2eu06nzhgn.s[4]++;return Role.findOne({name:roleName}).populate('permissions').exec();}/**
	 * Returns the default "User" role
	 * @return Promise
	 */loadUserRole(){cov_2eu06nzhgn.f[2]++;cov_2eu06nzhgn.s[5]++;return this.loadByName('User');}/**
	 * Returns only roles assignable by OSGS users
	 */loadOSGSRoles(){cov_2eu06nzhgn.f[3]++;cov_2eu06nzhgn.s[6]++;return Role.find({osgsAssignable:true}).sort('name').populate('permissions').exec();}/**
	 * Returns a list of all Roles
	 * @return Promise
	 */loadAll(){cov_2eu06nzhgn.f[4]++;cov_2eu06nzhgn.s[7]++;return Role.find({}).sort('name').populate('permissions').exec();}/**
	 * Determines whether the given role is an OSGS-assignable role
	 * @param string roleId
	 * @return Promise
	 */isRoleOSGSAssignable(roleId){cov_2eu06nzhgn.f[5]++;cov_2eu06nzhgn.s[8]++;return this.loadOne(roleId).then(role=>{cov_2eu06nzhgn.f[6]++;cov_2eu06nzhgn.s[9]++;return(cov_2eu06nzhgn.b[0][0]++,role.osgsAssignable)||(cov_2eu06nzhgn.b[0][1]++,false);});}/**
	 * Assigns the given role to the given user
	 * @param string userId
	 * @param string roleId
	 * @return Promise
	 */assignRole(userId,roleId){cov_2eu06nzhgn.f[7]++;const id=(cov_2eu06nzhgn.s[10]++,mongoose.Types.ObjectId(userId));const update=(cov_2eu06nzhgn.s[11]++,{$addToSet:{roles:roleId}});const promise=(cov_2eu06nzhgn.s[12]++,User.findByIdAndUpdate(id,update).exec());cov_2eu06nzhgn.s[13]++;return promise;}/**
	 * Removes the given role from the given user
	 * @param string userId
	 * @param string roleId
	 * @return Promise
	 */unassignRole(userId,roleId){cov_2eu06nzhgn.f[8]++;const id=(cov_2eu06nzhgn.s[14]++,mongoose.Types.ObjectId(userId));const update=(cov_2eu06nzhgn.s[15]++,{$pull:{roles:roleId}});const promise=(cov_2eu06nzhgn.s[16]++,User.findByIdAndUpdate(id,update).exec());cov_2eu06nzhgn.s[17]++;return promise;}/**
	 * Assigns the given permission to the given role
	 * @param string roleId
	 * @param string permissionId
	 * @return Promise
	 */assignPermission(roleId,permissionId){cov_2eu06nzhgn.f[9]++;const roleObjectId=(cov_2eu06nzhgn.s[18]++,mongoose.Types.ObjectId(roleId));const permissionObjectId=(cov_2eu06nzhgn.s[19]++,mongoose.Types.ObjectId(permissionId));const update=(cov_2eu06nzhgn.s[20]++,{$addToSet:{permissions:permissionObjectId}});const promise=(cov_2eu06nzhgn.s[21]++,Role.findByIdAndUpdate(roleObjectId,update).exec());cov_2eu06nzhgn.s[22]++;return promise;}/**
	 * Removes the given permission from the given role
	 * @param string roleId
	 * @param string permissionId
	 * @return Promise
	 */unassignPermission(roleId,permissionId){cov_2eu06nzhgn.f[10]++;const roleObjectId=(cov_2eu06nzhgn.s[23]++,mongoose.Types.ObjectId(roleId));const permissionObjectId=(cov_2eu06nzhgn.s[24]++,mongoose.Types.ObjectId(permissionId));const update=(cov_2eu06nzhgn.s[25]++,{$pull:{permissions:permissionObjectId}});const promise=(cov_2eu06nzhgn.s[26]++,Role.findByIdAndUpdate(roleObjectId,update).exec());cov_2eu06nzhgn.s[27]++;return promise;}/**
	 * Determines whether or not the User with the given ID has the given role
	 * @param string userId
	 * @param string roleName
	 * @return Promise
	 */hasRole(userId,roleName){cov_2eu06nzhgn.f[11]++;cov_2eu06nzhgn.s[28]++;userId=(cov_2eu06nzhgn.b[1][0]++,userId)||(cov_2eu06nzhgn.b[1][1]++,null);cov_2eu06nzhgn.s[29]++;roleName=(cov_2eu06nzhgn.b[2][0]++,roleName)||(cov_2eu06nzhgn.b[2][1]++,null);const promise=(cov_2eu06nzhgn.s[30]++,this.loadByName(roleName).then(role=>{cov_2eu06nzhgn.f[12]++;cov_2eu06nzhgn.s[31]++;if(!role){cov_2eu06nzhgn.b[3][0]++;cov_2eu06nzhgn.s[32]++;return false;}else{cov_2eu06nzhgn.b[3][1]++;}cov_2eu06nzhgn.s[33]++;return User.findOne({_id:userId,roles:role}).exec();}).then(user=>{cov_2eu06nzhgn.f[13]++;cov_2eu06nzhgn.s[34]++;return!!user;}));cov_2eu06nzhgn.s[35]++;return promise;}}cov_2eu06nzhgn.s[36]++;module.exports=RoleDao;