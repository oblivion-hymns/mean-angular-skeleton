var cov_11xna2qw8s=function(){var path='/home/bwilbur/projects/mercury/modules/building-agency/models/building-agency-incident-dao.js',hash='75b27d61e3a147b7a61bc79f6f457269f7193eaa',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/home/bwilbur/projects/mercury/modules/building-agency/models/building-agency-incident-dao.js',statementMap:{'0':{start:{line:1,column:23},end:{line:1,column:51}},'1':{start:{line:2,column:20},end:{line:2,column:67}},'2':{start:{line:16,column:17},end:{line:19,column:3}},'3':{start:{line:20,column:18},end:{line:61,column:4}},'4':{start:{line:21,column:23},end:{line:21,column:25}},'5':{start:{line:22,column:3},end:{line:36,column:4}},'6':{start:{line:25,column:28},end:{line:25,column:39}},'7':{start:{line:27,column:4},end:{line:30,column:5}},'8':{start:{line:29,column:5},end:{line:29,column:34}},'9':{start:{line:32,column:4},end:{line:35,column:7}},'10':{start:{line:38,column:24},end:{line:38,column:29}},'11':{start:{line:39,column:3},end:{line:48,column:4}},'12':{start:{line:42,column:4},end:{line:47,column:5}},'13':{start:{line:44,column:5},end:{line:44,column:56}},'14':{start:{line:45,column:5},end:{line:45,column:27}},'15':{start:{line:46,column:5},end:{line:46,column:11}},'16':{start:{line:50,column:3},end:{line:56,column:4}},'17':{start:{line:52,column:4},end:{line:55,column:7}},'18':{start:{line:58,column:3},end:{line:58,column:32}},'19':{start:{line:60,column:3},end:{line:60,column:50}},'20':{start:{line:63,column:2},end:{line:63,column:17}},'21':{start:{line:75,column:26},end:{line:75,column:28}},'22':{start:{line:77,column:22},end:{line:77,column:39}},'23':{start:{line:78,column:18},end:{line:131,column:4}},'24':{start:{line:81,column:3},end:{line:94,column:4}},'25':{start:{line:84,column:28},end:{line:84,column:40}},'26':{start:{line:85,column:4},end:{line:93,column:5}},'27':{start:{line:88,column:26},end:{line:88,column:51}},'28':{start:{line:89,column:5},end:{line:92,column:6}},'29':{start:{line:91,column:6},end:{line:91,column:58}},'30':{start:{line:96,column:3},end:{line:96,column:79}},'31':{start:{line:98,column:29},end:{line:98,column:30}},'32':{start:{line:99,column:25},end:{line:99,column:49}},'33':{start:{line:102,column:3},end:{line:119,column:4}},'34':{start:{line:105,column:31},end:{line:105,column:58}},'35':{start:{line:106,column:4},end:{line:118,column:5}},'36':{start:{line:110,column:29},end:{line:110,column:57}},'37':{start:{line:111,column:5},end:{line:117,column:6}},'38':{start:{line:113,column:6},end:{line:116,column:7}},'39':{start:{line:115,column:7},end:{line:115,column:29}},'40':{start:{line:121,column:16},end:{line:121,column:17}},'41':{start:{line:122,column:3},end:{line:125,column:4}},'42':{start:{line:124,column:4},end:{line:124,column:51}},'43':{start:{line:127,column:3},end:{line:127,column:34}},'44':{start:{line:128,column:3},end:{line:128,column:25}},'45':{start:{line:130,column:3},end:{line:130,column:17}},'46':{start:{line:133,column:2},end:{line:133,column:17}},'47':{start:{line:141,column:2},end:{line:147,column:5}},'48':{start:{line:142,column:3},end:{line:146,column:4}},'49':{start:{line:144,column:16},end:{line:144,column:23}},'50':{start:{line:145,column:4},end:{line:145,column:52}},'51':{start:{line:151,column:0},end:{line:151,column:43}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:14,column:1},end:{line:14,column:2}},loc:{start:{line:15,column:1},end:{line:64,column:2}},line:15},'1':{name:'(anonymous_1)',decl:{start:{line:20,column:54},end:{line:20,column:55}},loc:{start:{line:20,column:72},end:{line:59,column:3}},line:20},'2':{name:'(anonymous_2)',decl:{start:{line:59,column:10},end:{line:59,column:11}},loc:{start:{line:59,column:16},end:{line:61,column:3}},line:59},'3':{name:'(anonymous_3)',decl:{start:{line:73,column:1},end:{line:73,column:2}},loc:{start:{line:74,column:1},end:{line:134,column:2}},line:74},'4':{name:'(anonymous_4)',decl:{start:{line:78,column:51},end:{line:78,column:52}},loc:{start:{line:78,column:64},end:{line:97,column:3}},line:78},'5':{name:'(anonymous_5)',decl:{start:{line:97,column:10},end:{line:97,column:11}},loc:{start:{line:97,column:28},end:{line:131,column:3}},line:97},'6':{name:'(anonymous_6)',decl:{start:{line:139,column:1},end:{line:139,column:2}},loc:{start:{line:140,column:1},end:{line:148,column:2}},line:140},'7':{name:'(anonymous_7)',decl:{start:{line:141,column:38},end:{line:141,column:39}},loc:{start:{line:141,column:46},end:{line:147,column:3}},line:141}},branchMap:{'0':{loc:{start:{line:27,column:4},end:{line:30,column:5}},type:'if',locations:[{start:{line:27,column:4},end:{line:30,column:5}},{start:{line:27,column:4},end:{line:30,column:5}}],line:27},'1':{loc:{start:{line:42,column:4},end:{line:47,column:5}},type:'if',locations:[{start:{line:42,column:4},end:{line:47,column:5}},{start:{line:42,column:4},end:{line:47,column:5}}],line:42},'2':{loc:{start:{line:50,column:3},end:{line:56,column:4}},type:'if',locations:[{start:{line:50,column:3},end:{line:56,column:4}},{start:{line:50,column:3},end:{line:56,column:4}}],line:50},'3':{loc:{start:{line:89,column:5},end:{line:92,column:6}},type:'if',locations:[{start:{line:89,column:5},end:{line:92,column:6}},{start:{line:89,column:5},end:{line:92,column:6}}],line:89},'4':{loc:{start:{line:89,column:9},end:{line:89,column:90}},type:'binary-expr',locations:[{start:{line:89,column:9},end:{line:89,column:48}},{start:{line:89,column:52},end:{line:89,column:90}}],line:89},'5':{loc:{start:{line:111,column:5},end:{line:117,column:6}},type:'if',locations:[{start:{line:111,column:5},end:{line:117,column:6}},{start:{line:111,column:5},end:{line:117,column:6}}],line:111},'6':{loc:{start:{line:113,column:6},end:{line:116,column:7}},type:'if',locations:[{start:{line:113,column:6},end:{line:116,column:7}},{start:{line:113,column:6},end:{line:116,column:7}}],line:113},'7':{loc:{start:{line:113,column:10},end:{line:113,column:79}},type:'binary-expr',locations:[{start:{line:113,column:10},end:{line:113,column:40}},{start:{line:113,column:44},end:{line:113,column:79}}],line:113},'8':{loc:{start:{line:122,column:3},end:{line:125,column:4}},type:'if',locations:[{start:{line:122,column:3},end:{line:125,column:4}},{start:{line:122,column:3},end:{line:125,column:4}}],line:122}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0,'49':0,'50':0,'51':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0],'4':[0,0],'5':[0,0],'6':[0,0],'7':[0,0],'8':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const BuildingAgency=(cov_11xna2qw8s.s[0]++,require('./building-agency'));const IncidentDao=(cov_11xna2qw8s.s[1]++,require('./../../incident/models/incident-dao'));class BuildingAgencyIncidentDao{/**
	 * Saves form data for one incident for a given building-agency unit
	 * @param string buildingId
	 * @param string agencyId
	 * @param string incidentId
	 * @param any[] formData - Array of objects in the format {fieldId: string, value: mixed}
	 * @return Promise
	 */saveIncidentData(buildingId,agencyId,incidentId,formData){cov_11xna2qw8s.f[0]++;const params=(cov_11xna2qw8s.s[2]++,{agencyId:agencyId,buildingId:buildingId});const promise=(cov_11xna2qw8s.s[3]++,BuildingAgency.findOne(params).then(buildingAgency=>{cov_11xna2qw8s.f[1]++;let sanitizedData=(cov_11xna2qw8s.s[4]++,[]);cov_11xna2qw8s.s[5]++;for(let i=0;i<formData.length;i++){//So people can't put garbage fields into our database
const currentFormData=(cov_11xna2qw8s.s[6]++,formData[i]);cov_11xna2qw8s.s[7]++;if(currentFormData.value===''){cov_11xna2qw8s.b[0][0]++;cov_11xna2qw8s.s[8]++;currentFormData.value=null;}else{cov_11xna2qw8s.b[0][1]++;}cov_11xna2qw8s.s[9]++;sanitizedData.push({fieldId:currentFormData.fieldId,value:currentFormData.value});}let incidentExists=(cov_11xna2qw8s.s[10]++,false);cov_11xna2qw8s.s[11]++;for(let i=0;i<buildingAgency.incidents.length;i++){cov_11xna2qw8s.s[12]++;//If the incident exists, replace the data with this new data
if(incidentId==buildingAgency.incidents[i].incidentId){cov_11xna2qw8s.b[1][0]++;cov_11xna2qw8s.s[13]++;buildingAgency.incidents[i].fields=sanitizedData;cov_11xna2qw8s.s[14]++;incidentExists=true;cov_11xna2qw8s.s[15]++;break;}else{cov_11xna2qw8s.b[1][1]++;}}cov_11xna2qw8s.s[16]++;if(!incidentExists){cov_11xna2qw8s.b[2][0]++;cov_11xna2qw8s.s[17]++;buildingAgency.incidents.push({incidentId:incidentId,fields:sanitizedData});}else{cov_11xna2qw8s.b[2][1]++;}cov_11xna2qw8s.s[18]++;return buildingAgency.save();}).then(()=>{cov_11xna2qw8s.f[2]++;cov_11xna2qw8s.s[19]++;return this.updateHealth(buildingId,agencyId);}));cov_11xna2qw8s.s[20]++;return promise;}/**
	 * Updates the health property of the given building-agency unit.
	 * Returns a promise that forwards the new health of the BAU
	 * @param string buildingId
	 * @param string agencyId
	 * @return Promise
	 */updateHealth(buildingId,agencyId){cov_11xna2qw8s.f[3]++;let publishedFieldIds=(cov_11xna2qw8s.s[21]++,[]);const incidentDao=(cov_11xna2qw8s.s[22]++,new IncidentDao());const promise=(cov_11xna2qw8s.s[23]++,incidentDao.loadPublished().then(incidents=>{cov_11xna2qw8s.f[4]++;cov_11xna2qw8s.s[24]++;//Get and organize a list of all published, fillable field IDs
//Iterate over all incidents
for(let i=0;i<incidents.length;i++){//Iterate over all fields in all incidents
const currentIncident=(cov_11xna2qw8s.s[25]++,incidents[i]);cov_11xna2qw8s.s[26]++;for(let j=0;j<currentIncident.fields.length;j++){//If the field is valid & fillable, add it to the list
const currentField=(cov_11xna2qw8s.s[27]++,currentIncident.fields[j]);cov_11xna2qw8s.s[28]++;if((cov_11xna2qw8s.b[4][0]++,currentField.type.identifier!='label')&&(cov_11xna2qw8s.b[4][1]++,currentField.type.identifier!='file')){cov_11xna2qw8s.b[3][0]++;cov_11xna2qw8s.s[29]++;publishedFieldIds.push(currentField._id.toString());}else{cov_11xna2qw8s.b[3][1]++;}}}cov_11xna2qw8s.s[30]++;return BuildingAgency.findOne({buildingId:buildingId,agencyId:agencyId});}).then(buildingAgency=>{cov_11xna2qw8s.f[5]++;let completedFieldCount=(cov_11xna2qw8s.s[31]++,0);let totalFieldCount=(cov_11xna2qw8s.s[32]++,publishedFieldIds.length);//Check every field on the BAU against every valid, fillable, published field
cov_11xna2qw8s.s[33]++;for(let i=0;i<buildingAgency.incidents.length;i++){//Check against all published incidents
const currentBauIncident=(cov_11xna2qw8s.s[34]++,buildingAgency.incidents[i]);cov_11xna2qw8s.s[35]++;for(let j=0;j<currentBauIncident.fields.length;j++){//If the BAU's field is not in the list of published fields, disregard it --
//it must not count towards the BAU's health score
const currentBauField=(cov_11xna2qw8s.s[36]++,currentBauIncident.fields[j]);cov_11xna2qw8s.s[37]++;if(publishedFieldIds.indexOf(currentBauField.fieldId)>-1){cov_11xna2qw8s.b[5][0]++;cov_11xna2qw8s.s[38]++;if((cov_11xna2qw8s.b[7][0]++,currentBauField.value!==null)&&(cov_11xna2qw8s.b[7][1]++,currentBauField.value!==undefined)){cov_11xna2qw8s.b[6][0]++;cov_11xna2qw8s.s[39]++;completedFieldCount++;}else{cov_11xna2qw8s.b[6][1]++;}}else{cov_11xna2qw8s.b[5][1]++;}}}let health=(cov_11xna2qw8s.s[40]++,0);cov_11xna2qw8s.s[41]++;if(totalFieldCount>0){cov_11xna2qw8s.b[8][0]++;cov_11xna2qw8s.s[42]++;health=completedFieldCount/totalFieldCount;}else{cov_11xna2qw8s.b[8][1]++;}cov_11xna2qw8s.s[43]++;buildingAgency.health=health;cov_11xna2qw8s.s[44]++;buildingAgency.save();cov_11xna2qw8s.s[45]++;return health;}));cov_11xna2qw8s.s[46]++;return promise;}/**
	 * Updates the health of all building-agency units
	 */updateAll(){cov_11xna2qw8s.f[6]++;cov_11xna2qw8s.s[47]++;BuildingAgency.find({}).exec().then(baus=>{cov_11xna2qw8s.f[7]++;cov_11xna2qw8s.s[48]++;for(let i=0;i<baus.length;i++){const bau=(cov_11xna2qw8s.s[49]++,baus[i]);cov_11xna2qw8s.s[50]++;this.updateHealth(bau.buildingId,bau.agencyId);}});}}cov_11xna2qw8s.s[51]++;module.exports=BuildingAgencyIncidentDao;