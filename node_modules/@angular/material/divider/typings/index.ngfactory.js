/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/divider";
import * as i2 from "@angular/cdk/bidi";
import * as i3 from "@angular/common";
import * as i4 from "@angular/material/core";
var MatDividerModuleNgFactory = i0.ɵcmf(i1.MatDividerModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(6144, i2.DIR_DOCUMENT, null, [i3.DOCUMENT]), i0.ɵmpd(4608, i2.Directionality, i2.Directionality, [[2, i2.DIR_DOCUMENT]]), i0.ɵmpd(4608, i3.NgLocalization, i3.NgLocaleLocalization, [i0.LOCALE_ID, [2, i3.ɵa]]), i0.ɵmpd(512, i2.BidiModule, i2.BidiModule, []), i0.ɵmpd(256, i4.MATERIAL_SANITY_CHECKS, true, []), i0.ɵmpd(512, i4.MatCommonModule, i4.MatCommonModule, [[2, i4.MATERIAL_SANITY_CHECKS]]), i0.ɵmpd(512, i3.CommonModule, i3.CommonModule, []), i0.ɵmpd(512, i1.MatDividerModule, i1.MatDividerModule, [])]); });
export { MatDividerModuleNgFactory as MatDividerModuleNgFactory };
var styles_MatDivider = [".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}"];
var RenderType_MatDivider = i0.ɵcrt({ encapsulation: 2, styles: styles_MatDivider, data: {} });
export { RenderType_MatDivider as RenderType_MatDivider };
export function View_MatDivider_0(_l) { return i0.ɵvid(2, [], null, null); }
export function View_MatDivider_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "mat-divider", [["class", "mat-divider"], ["role", "separator"]], [[1, "aria-orientation", 0], [2, "mat-divider-vertical", null], [2, "mat-divider-inset", null]], null, null, View_MatDivider_0, RenderType_MatDivider)), i0.ɵdid(1, 49152, null, 0, i1.MatDivider, [], null, null)], null, function (_ck, _v) { var currVal_0 = (i0.ɵnov(_v, 1).vertical ? "vertical" : "horizontal"); var currVal_1 = i0.ɵnov(_v, 1).vertical; var currVal_2 = i0.ɵnov(_v, 1).inset; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }
var MatDividerNgFactory = i0.ɵccf("mat-divider", i1.MatDivider, View_MatDivider_Host_0, { vertical: "vertical", inset: "inset" }, {}, []);
export { MatDividerNgFactory as MatDividerNgFactory };
